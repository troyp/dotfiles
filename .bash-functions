function manh {
    firefox -P default "localhost//cgi-bin/man/man2html?query=$1"
}

function grepdict {
    grep $1 /usr/share/dict/words
}

function irm {
    echo $(ls $1)
    n=$(ls $1 | wc -l)
    read -p "Delete $n files?" -n 1 CONFIRM
    if [[ $CONFIRM =~ ^[Yy]$ ]]; then
	rm $1
    fi
}

function explode {
    printf $1 | grep -o .
}

function remove-last {
    head -n -1 $1 > temp-remove-last
    mv temp-remove-last $1
}

# TODO: handle aliases, functions, failure, multiple matches (eg. alias and command)
# TODO: probably best to convert to script
function prsource {
    cat $(which $1)
}
# prsource with syntax highlighting via colz alias
function prsrc {
    cat $(which $1) | colz
}

# compress directory as .tgz
function tgz {
    tar czf "${1%/}.tgz" "$1"
}

# convert directory to .cbz
function cbz {
    pushd "$1" || return
    # n=`ls -v | tail -n1 | awk -F'.' '{ print(length($1)) }'`
    n=`ls -pv | GREP_OPTIONS="" grep -v ".*/$" | tail -n1 | awk -F'.' '{ print(length($1)) }'`;
    for fname in *; do 
	fnum="${fname%.*}"
	padded=`printf "%0${n}d.%s" "$(expr $fnum + 0)" "${fname##*.}"`
	mv "$fname" "$padded"
	# echo "$fname    $padded"
    done
    popd
    zip -r "${1%/}.cbz" "$1" 
}
# cbz quiet
alias cbzq='cbz > /dev/null'

# compress directory as .tgz
function maff {
    archive_name="${1%/}.maff"
    7z a -tzip "$archive_name" "$1"
}

function maffus {
    archive_name=`echo "${1%/}" | sed -e 's/ /_/g'`.maff
    7z a -tzip "$archive_name" "$1"
}

function man2text { man "$1" | col -bx; }

function ussp {
    converted_name=${1//_/ }
    if [ ! -f "$converted_name" ]; then 
	mv "$1" "$converted_name"
    fi
}
 
function spus {
    converted_name=${1// /_}
    if [ ! -f "$converted_name" ]; then 
	mv "$1" "$converted_name"
    fi
}
 
function dotsp {
    extension="${1##*.}"
    base_name="${1%.*}"
    converted_name="${base_name//./ }.$extension"
    if [ ! -f "$converted_name" ]; then 
	mv "$1" "$converted_name"
    fi
}
 
function pdfbmarks-out {
    # pdfmarks PDF_DOC > BMARKFILE
    pdftk "$1" dump_data
}

function pdfbmarks-in {
    # pdfbmarks PDF_DOC BMARK_FILE
    # produces new pdf 'out.pdf'
    pdftk "$1" update_info "$2" output out.pdf
}

function quick-diffdir {
    diff <(cd "$1" && find | sort) <(cd "$2" && find | sort)
}

function findinfilename {
    find * -regextype posix-extended -type f -iregex "^[^.]*$1[^/]*$"
}

function findinfofile {
    locate --regex "/$1\.info(\.gz)?$"
}

function apt-install-from-file {
    sudo apt-get install `cat $1 | tr '\n' ' '`
}

function einfo {
    emacsclient --eval "(info \"$(findinfofile $1)\")"
}

