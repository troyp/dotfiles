"     ___________________ 
"    /                   \
"    | ,---------------, |
"    | | PENTADACTYLRC | |
"    | '---------------' |
"    \___________________/
"
"
group default
" load javascript utilities
runtime! utils.js
" load utils into current context
js var utils = dactyl.utils.getPlugin("utils");
" load personal details
runtime! personal.js
runtime! jquery.min.js
set passkeys=


" -----------------------------------------------------------------------------
" ,---------,
" | Options |
" '---------'
"
set runtimepath=/home/troy/.pentadactyl
set guioptions=bBCrMNsT
set incfind
set hlfind
set findcase=smart
set showstatuslinks=status
"set wildmode=list:longest,list:full
set wildmode=list:full
set altwildmode=list:longest,list:full
set strictfocus=mail.google.com:laissez-faire,'chrome:*':laissez-faire,*:moderate
" Ex commands output in a new tab by default (prefs, addons...)
set newtab=all
" make yanks go to clipboard
js editor.defaultRegister="+"
set! browser.tabs.closeWindowWithLastTab=false
set editor='roxterm --replace -e vim -f +<line> +"sil! call cursor(0, <column>)" <file>'
" nextpattern, previouspattern
" default: '^\s*Next Page\s*$','^\s*Njapanese_table_111215ext [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bmore\b',
" default: '^\s*Prev(ious)? Page\s*$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)',
set nextpattern='^\s*Next Page\s*$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bMore Words\b','\bmore\b',
set wildignore='~$','^(.*/)?\..*\.sw[m-p]$','^(.*/)?#.+#$'


" =============================================================================
"                                   ______________ 
"                                  |              |
"                                  | KEY BINDINGS |
"                                  |______________|


map -b s <Nop>
map -b <C-x><C-h> <Nop>
map -b <C-x> <Nop>

map e <goto>
map c <site>
map s <select>
map S <sidebar>
map x <extra>
map X <S-extra>
map <C-x> <option>
map , <leader>


" ----------------------------------------------------------------------------- 
" ,--------------------------,
" | Normal mode key bindings |
" '--------------------------'

" PREFIX KEYS: c e s ss x , \ <C-x>
" c : site-specific bindings
" x : global bindings
" s : selection bindings
" ss : sidebar bindings
" <C-x> : GUI commands, etc.

" REPLACE DEFAULT BINDINGS:
" free a
map -b a <Nop>
" free C-h, use C-,, C-. to replace h, l
map -b <C-,> <Left>
map -b <C-.> <Right>
" use h, l for tab changing
map -b h gT
map -b l gt
" replace h, l with A-k, A-j for horizontal movement
map -b <A-j> l
map -b <A-k> h
" free C-N, C-P bindings for tab movement
map -b <C-S-P> <Nop>
map -b <C-S-N> <Nop>
" bind gs as :viewsource, free gf for g;b
map -b gf <Nop>
map -b gs gf
" replace builtin <C-a> and <C-x> bindings (inrease/decrease URL by 1)
map -b <C-a> <Nop>
map -b <A-=> <C-a>
map -b <A--> <C-x>
" swap p and P
map -b p P
map -b P p

" Miscellaneous Bindings:
" Passthrough
map -b a <C-v>
map -b <C-a> <C-z>
" Repeat last ex command
map -b g. @:
" Copying
map -b <A-w> Y
" A-Esc: Pass-through Escape
map -b <A-Esc> <C-v><Esc>
" C-w closes tab; if last in window closes window.
map -b <C-w> :q<CR>
" movement
map -b <C-S-D> <C-u>
map -b J <C-d>
map -b K <C-u>
" Restart with C-c C-c:
map -b <C-x><C-x> :restart<CR>
" reload .pentadactylrc
map -b <C-x>l :rc<CR>
" redraw screen
map -b gR :redraw<CR>
" (Re-)Maximize window (when Pentadactyl pushes command line offscreen)
map -b gx -js window.restore(); window.maximize();
" select all
nmap -b <C-x>h iGvggy
" second input area
map -b <extra>gi 2gi
" yank page title
map -b <extra>y -js dactyl.clipboardWrite(buffer.title)
" yank buffer URL (unencoded)
map -b gy -ex yanktrueURL
" yank filename or buffer URL (unencoded)
map -b <extra>gy -ex yankfilenameorURL
" jumplist
map -b <C-j> -ex jumps

" Search:
" clear the search term highlighting
map -b <C-/> :noh<CR>
" Regex search
map -b g/ /\r
map -b g? ?\r
" Link search
map -b <select>/ /\l
map -b <select>? ?\l
" Search from top of page
map -b <option>/ gg/
" Search for word starting with...
map -b <extra>/ /\r\w*<Left><Left><left>
" Search for word containing...
map -b <S-extra>/ /\r\w*\w*<Left><Left><left>
" C-' Firefox link search
map -b "<C-'>" <C-v>'
" Search clipboard contents using search keyword
map -b <leader>s :<C-v><C-v><Home>tabopen<Space><Space><Left>
map -b <leader>S :<C-v><C-v><Home>open<Space><Space><Left>

" -----------------------------------------------------------------------------
" ,---------------------------------------,  MAP COMMANDS.
" | Command mode and insert mode bindings |  cmap: command-line mode
" '---------------------------------------'  imap: insert mode

" use c_<C-,>, c_<C-.> for cycling WildMode completion
cmap -b <C-,> <Tab>
cmap -b <C-.> <S-Tab>
" use c_<C-Space> for AltWildMode completion
map -b -modes=command-line <C-Space> <A-Tab>
map -b -modes=command-line <C-S-Space> <A-S-Tab>

map -modes command-line,insert -b <C-y> <C-v><C-v>
map -modes command-line,insert -b <C-p> <Up>
map -modes command-line,insert -b <C-n> <Down>
map -modes command-line,insert -b <C-S-P> <S-Up>
map -modes command-line,insert -b <C-S-N> <S-Down>
map -modes command-line,insert -b <C-f> <Right>
map -modes command-line,insert -b <C-b> <Left>

" SPACES (TODO)
" insert space with C-SPACE (When typing search keywords in
" a japanese IME, double-width spaces don't work. If F10
" won't convert spaces to single width, C-SPACE can be used.
map -modes command-line,insert -b <C-SPACE> <SPACE>
" TODO: Work out how to get current textarea. See insertAtCaret()
" nbsp
map -modes command-line,insert <C-S-s> -js alert("not implemented");
" em-space
" FIXME: Doesn't work.
"map -modes insert -b <C-s> \u2003
"execute "map -modes insert -b <C-s> \u2003"
"execute "map -modes command-line,insert -b <C-s> " + '\u2003'

execute "map -modes command-line,insert -b <C-m> " + user.myemail
execute "map -modes command-line,insert -b <C-S-m> " + user.myemail2
execute "map -modes command-line,insert -b <C-S-I> " + user.myname
execute "map -modes command-line,insert -b <C-S-T> " + user.myfirstname
execute "map -modes command-line,insert -b <C-S-L> " + user.mylastname
execute "map -modes command-line,insert -b <C-S-W> " + user.mymasterpw
execute "map -modes command-line,insert -b <C-S-A> " + user.mystreet
execute "map -modes command-line,insert -b <C-S-S> " + user.mysuburb
execute "map -modes command-line,insert -b <C-S-D> " + user.myaddress
execute "map -modes command-line,insert -b <C-S-P> " + user.myphone


" -----------------------------------------------------------------------------
" ,--------------------------------,  MAP COMMANDS.     
" | Caret and visual mode bindings |  vmap: visual mode
" '--------------------------------'

" Caret and Visual mode:
" C-e end of line, C-a start of line.
" C-y scroll down, C-Y scroll up.
map -modes caret,visual -b <C-a> 0
map -modes caret,visual -b <C-e> $
map -modes caret,visual -b <C-S-Y> <C-e>
" to search and select:
" 1. press / and type search term
" 2. when satisfied, press enter
" 3. press C-/ to clear highlighting of other matches
" 4. press i to enter insert mode
" 5. press <left> to move to start of match
" 6. press v to enter visual mode
" 7. use visual mode keys j,k,h,l,C-a,C-e, etc to extend selection

" -----------------------------------------------------------------------------
" ,--------------------,
" | Menu mode bindings |
" '--------------------'

map -modes menu -b <C-n> <Down>
map -modes menu -b <C-p> <Up>
map -modes menu -b <C-j> <Down>
map -modes menu -b <C-k> <Up>
map -modes menu -b <C-h> <Left>
map -modes menu -b <C-l> <Right>

" -----------------------------------------------------------------------------
" ,--------------------------------------,
" | Text-edit and operator mode bindings |
" '--------------------------------------'

map -modes text-edit,operator -b <C-a> ^
map -modes text-edit,operator -b <C-e> $
map -modes text-edit,operator -b <A-=> <C-a>
map -modes text-edit,operator -b <A--> <C-x>


" -----------------------------------------------------------------------------
" ,----------------------------,
" | Pass-through mode bindings |
" '----------------------------'

map -modes pass-through -b <A-;> :normal "<Esc><C-^>"<CR>


" ----------------------------------------------------------------------------- 
" ,----------,
" | Commands |
" '----------'

command! undob -description "Undo tab in background" -js undob()
command! backt -description "Create adjacent duplicate tab and go back in the browser history" -js backt()
command! forwardt -description "Create adjacent duplicate tab and go forward in the browser history" -js forwardt()
command! tabdupa -description "Create adjacent duplicate tab" -js tabdupa()

command! pasteall -description "open all links in clipboard" -js openAllLinksInCB();
map gp :pasteall<CR>

command! rc source ~/.pentadactylrc
"command! rce viewsource! file:/home/troy/.pentadactylrc
command! rce !gvim ~/.pentadactylrc 2> /dev/null

command! loadutils runtime! utils.js | js var utils = dactyl.utils.getPlugin("utils");

command! showsource -nargs=1 -js (alert(self[args[0]].toString()))

" enable/disable javascript
command! jsenable  :set! javascript.enabled=true
command! jsdisable :set! javascript.enabled=false

" Stop page from intercepting key events:
command! nointercept -js document.addEventListener('keydown', function(e) { e.stopImmediatePropagation(); return false;}, true);

" Open in Google Chrome:
command! ochrome :exec '!google-chrome ' + buffer.URL
map -b <extra>c :ochrome<CR>

" Show all marks (quickmarks and url/local marks)
command! allmarks,amarks,am :qmarks | marks

" Set/unset autoplay
command! autoplayon,autop :set! media.autoplay.enabled=true
command! autoplayoff,noautop :set! media.autoplay.enabled=false

" Troubleshooting information
command! info :tabopen about:support<CR>

" Unicode code of character
command! uni 
   \ -js dactyl.echo(
   \     dactyl.clipboardRead().charCodeAt(0).toString() +
   \     "\tU+" +
   \     dactyl.clipboardRead().charCodeAt(0).toString(16));

command! yanktitle js dactyl.clipboardWrite(buffer.title)

" Show extended hints modes
command! listhintmodes :echo hints.modes

" Text encodings
"command! encuni :execute "emenu View.Text Encoding.Unicode"
"command! encjis :execute "emenu View.Text Encoding.Japanese (Shift_JIS)"
command! encuni :emenu View.Text Encoding.Unicode
command! encjis :emenu View.Text Encoding.Japanese (Shift_JIS)

" ALIAS COMMAND
" FIXME
js <<EOF
createAlias = function(alias, def) {
  var cmd = "dactyl.execute(\"'" + def + "' + (bang ? '! ' : ' ') + ' '.join(args);\")"
  dactyl.execute("command! " + alias + " -nargs=* -bang -js " + cmd); 
}
EOF
command! alias -nargs=+ 
    \ -js createAlias(args[0], args[1]);

" =============================================================================
"                                       ______ 
"                                      |      |
"                                      | TABS |
"                                      |______|
"
" -----------------------------------------------------------------------------
" ,------------------,
" | Buffer Selection |
" '------------------'
" Select buffer:  b  (cycle with gb, gB)
" switch to previously selected buffer: A-;
map -modes command,embed -b <A-;> <C-^>
map -modes input -b <A-;> <Esc><C-^>
map -b \< g0
map -b \> g$

" -----------------------------------------------------------------------------
" ,--------------,
" | Pinning Tabs |
" '--------------'
command! unpinall tabdo unpintab
" toggle pinning of current tab
map -b ! :pintab!<CR>

" -----------------------------------------------------------------------------
" ,--------------,
" | Closing Tabs |
" '--------------'

" close other tabs
map -b <extra>1 :tabonly<CR>
" close tabs to left
map -b <extra>< -js closeAllToLeft()
" close tabs to right
map -b <extra>> -js closeAllToRight()
" close tab range
" :tc START END : close tabs starting with START and ending with the tabs before END
" doesn't work on last tab
command! tc 
    \ -description "close tab range from START to END inclusive"
    \ -nargs=*
    \ -js closeTabRange(args[0], args[1]);
command! tcto
    \ -description "close tab range from current tab to END inclusive"
    \ -nargs=1
    \ -js closeTabRange(gBrowser.mCurrentTab.dactylOrdinal, args[0]);
map -b <extra>: :tc<SPACE>
map -b <extra>; :tcto<SPACE>

" undo recent closed tab from list
map -b U :undo<SPACE>

"
" -----------------------------------------------------------------------------
" ,----------,
" | New Tabs |
" '----------'
" Duplicate tab, Back/Forward in New Tab
map -ex C :tabdupa
map -ex gh :backt
map -ex gl :forwardt
" Open multiple hints in background tabs
map -b gf g;b
" New tab
map -b gN  tabout:newtab<CR>
map -b gON oabout:newtab<CR>
"      gH : open home page in new tab

" -----------------------------------------------------------------------------
" ,-------------,
" | Moving Tabs |
" '-------------'
" alias tt=tabmove
command! tt -nargs=1 -bang 
    \ -js dactyl.execute("tabmove" + (bang ? "! " : " ") + args[0]); 
" map -b -arg <C-m>t :tabmove <arg><CR>
map -b <extra>m :tabmove<SPACE>
map -b gt :tabmove!<SPACE>
map -b <C-S-P> :tabmove! -1<CR>
map -b <C-S-N> :tabmove! +1<CR>
map -b <C-h> :tabmove! -1<CR>
map -b <C-l> :tabmove! +1<CR>
map -b <C-Left> :tabmove! -1<CR>
map -b <C-Right> :tabmove! +1<CR>
map -b <C-\<> :tabmove! 1<CR>
map -b <C-\>> :tabmove! $<CR>
map -b g\> :tabmove! $<CR>
map -b <A-S-1> :tabmove! 1<CR>
map -b <A-S-2> :tabmove! 2<CR>
map -b <A-S-3> :tabmove! 3<CR>
map -b <A-S-4> :tabmove! 4<CR>
map -b <A-S-5> :tabmove! 5<CR>
map -b <A-S-6> :tabmove! 6<CR>
map -b <A-S-7> :tabmove! 7<CR>
map -b <A-S-8> :tabmove! 8<CR>
map -b <A-S-9> :tabmove! $<CR>

" -----------------------------------------------------------------------------
" ,------------,
" | Tab Groups |
" '------------'

command! tginit 
    \ description "Initialize pentadactyl tabgroups commands"
    \ :runtime! tabgroups.penta


" =============================================================================
"                                       _______ 
"                                      |       |
"                                      | HINTS |
"                                      |_______|

"map -b gf g;t

set eht=[iI]:img,[asOTvVWy]:':-moz-any-link',area[href],img[src],iframe[src],[A]:[id],a[name],[f]:body,[F]:body,code,div,html,p,pre,span,[S]:'input:not([type=hidden])',textarea,button,select)
js hints.addMode('m','mouseover',utils.simulateMouseover);
" remove elements
set eht+=[x]:div,iframe
js hints.addMode('x','make div invisible',utils.undisplay);
set eht+=[X]:div,iframe
js hints.addMode('X','shift div off screen',utils.removeFromView);
" replace ;t with function for ;b (open in background)
js hints.addMode("t", "Follow hint in a background tab", elem => buffer.followLink(elem, dactyl.NEW_BACKGROUND_TAB))
set eht+=[p]:div,section,ol,ul,table,frame,iframe,img,h1,h2,h3,h4,input,xpath:div/p
js hints.addMode('p','lmnpop',elem => { lmnpop(elem); });

" svg: FIXME
runtime! svg-pan-zoom.min.js
set eht+=[G]:svg
js hints.addMode('G','pan & zoom SVG',alert);

" focus frame
map -b <extra>f ;F

map <yank_desc> ;Y

" ----------------------------------------------------------------------------- 
" ,----------,
" | hinttags |
" '----------'
"
set hinttags+='svg'
" Add hints for anchor elements whose class attribute starts with "vote":
set hinttags+=a[class^='vote']
set hinttags+=a[class^='speed']

" ----------------------------------------------------------------------------- 
" ,------------------,
" | extendedhinttags |
" '------------------'
"
" FIXME: can't activate context menu on 'body' hint
":set eht+=[c]:body,':-moz-any-link',area,button,iframe,input:not([type=hidden]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true]

" ----------------------------------------------------------------------------- 
" ,-------------------,
" | Styling for hints |
" '-------------------'
"
set hintkeys="jfkdls;ahgnvurieow"
"
highlight Hint
    \ font-family: "Droid Sans Mono Slashed"; 
    \ line-height: 14px; 
    \ text-shadow: 1px 1px 1px #888; 
    \ padding: 5px 8px 6px; 
    \ font-size: 20px; 
    \ font-weight: bold; 
    \ text-transform: uppercase; 
    \ color: rgb(91, 58, 26);
    \ background-color: rgba(255, 255, 255, 0.45) !important; 
    \ border-radius: 5px;
" HintImage: ?
highlight HintImage 
    \ background-color: rgba(255, 0, 255, 1) !important; 
    \ border-radius: 5px;
" HintElem: styling for elements when hinted
highlight HintElem 
    \ border-radius: 2px;
" HintActive: styling for active element when hinted
highlight -a HintActive
    \ background-color: rgba(255, 255, 255, 0.1) !important; 
    \ color: blue !important; 
    \ border-style: dashed;
    \ border-color: rgba(255, 0, 0, 0.4);
    \ border-width: 1px;
    \ border-radius: 2px;
" Hint[Active]: styling for hint on active element
highlight -a Hint[Active]
    \ background-color: rgba(255, 255, 0, 0.4) !important; 
    \ color: rgb(91, 58, 26);
    \ border-style: solid;
    \ border-color: rgb(91, 58, 26);


" ============================================================================= 
"       _______ 
"      |       |
"      |  GUI  |
"      |_______|

" ----------------------------------------------------------------------------- 
" ,----------,
" | Toolbars |
" '----------'

" <A-Up>:     show the navigation and bookmarks toolbars:
" <A-Down>:   hide the navigation and bookmarks toolbars:
" <C-x><C-a>: toggle the navigation and bookmarks toolbars:
map -b <A-Up> :set guioptions-=TB | set showtabline=never<CR>
map -b <A-Down> :set guioptions+=TB | set showtabline=always<CR>
map -b <C-x><C-a> :set guioptions!=TB | set showtabline!=always,never<CR>
" <C-x><C-m|t|e|b|d|s|o>: toggle toolbars/menubars
"(  menu|tab|navigation|bookmark|web-developer toolbar )
map -b <C-x><C-m> :set guioptions!=m<CR>
map -b <C-x><C-t> :set showtabline!=always,never<CR>
map -b <C-x><C-e> :set guioptions!=T<CR>
map -b <C-x><C-b> :set guioptions!=B<CR>
map -b <C-x><C-d> :toolbartoggle Web Developer Toolbar<CR>
map -b <C-x><C-s> :set guioptions!=s<CR>
map -b <C-x><C-o> :toolbartoggle Add-on Bar<CR>
"map -b <C-x><C-f> :buftabs<CR>
"
" Toggle FF Developer command line
" <S-f2> requires <Esc> to enter normal mode after toggling off.
" <S-f2><Esc> cannot restore focus to command line once lost.
" <S-f2><Tab> is mostly fine, but has the drawback that when 
"             restoring focus, it will select the current
"             tab-completion candidate, if one is visible.
map -modes base -b <A-x> <S-f2><Tab>


" ----------------------------------------------------------------------------- 
" ,---------,
" | Dialogs |
" '---------'

" downloads
map -b <goto>wd :dialog downloads<CR>
" about:config
command! ac 
    \ -description "Open about:config in new window" 
    \ :winopen about:config

" history (better dialog than `:dialog history`)
command! historydialog 
    \ -description "Open history dialog"
    \ :feedkeys <C-S-H>
	  
" TODO: places.xul doesn't allow keyboard navigation. Can it be fixed?
"       In the meantime, use the bookmarks dialog window instead.

map -b <goto>a -ex dialog addons
map -b <goto>c tabout:config<CR>
map -b <goto>d tabout:downloads<CR>
map -b <goto>k tchrome://browser/content/places/places.xul<CR>
map -b <goto>p tabout:plugins<CR>
map -b <goto>r tabout:sessionrestore<CR>
map -b <goto>s tabout:support<CR>
map -b <goto>s tabout:support<CR>
command! appcache 
    \ -description "Open about:cache in new tab" 
    \ :tabopen about:cache?storage=appcache

" help
map -b <goto>h -ex tabopen ~/.pentadactyl/docs/help/index.html
" single-page pentadactyl help
"map -b <goto><f1> :helpall<CR>
map -b <goto><f1> -ex tabopen ~/.pentadactyl/docs/all.html


" Select:

map -b <select>j :jumps<CR>
map -b <select>;h :history!<SPACE>
map -b <select>a :addons<CR>
map -b <select>m :emenu<SPACE>
map -b <select>p :set<SPACE>
map -b <select>c :set!<SPACE>
map -b <select>;k :bmarks!<SPACE>

" List:
map -b <select>b :buffers<SPACE>
map -b <select>h :history<SPACE>
map -b <select>k :bmarks<SPACE>

" ----------------------------------------------------------------------------- 
" ,--------------,
" | AiOS SideBar |
" '--------------'

" Manual sidebar selection with si, toggle with S
map -b si :sidebar<SPACE>
" map -b <sidebar> :sidebar!<CR>
" Open/close AiOS, switch focus
"map -b <sidebar> :js aios_toggleSidebar()<CR><f6><f6>
" Open AiOS, switch focus and enter passthrough
"map -b <select>S :js aios_toggleSidebar()<CR><f6><f6><C-z>

" Sidebar selection:
map -b <select>A :sidebar! Add-ons<CR>
map -b <sidebar>A :sidebar! Add-ons<CR><f6><f6><C-z>
map -b <select>M :sidebar! Bookmarks<CR>
map -b SM :sidebar! Bookmarks<CR><f6><f6><C-z>
map -b <select>D :sidebar! Downloads<CR>
map -b SD :sidebar! Downloads<CR><f6><f6><C-z>
map -b <select>H :sidebar! History<CR>
map -b SH :sidebar! History<CR><f6><f6><C-z>
map -b <select>M :sidebar! Moji<CR>
map -b SM :sidebar! Moji<CR><f6><f6><C-z>
map -b <select>O :sidebar! HeadingsMap<CR>
map -b SO :sidebar! HeadingsMap<CR><f6><f6><C-z>
map -b <select>P :sidebar! Preferences<CR>
map -b SP :sidebar! Preferences<CR><f6><f6><C-z>

" ----------------------------------------------------------------------------- 
" ,---------------------,
" | Resizing and moving |
" '---------------------'

command! resize -description "Resize window to X Y"
    \ -nargs=* -js self.resizeTo(args[0], args[1])
command! resizeby -description "Resize window by X Y"
    \ -nargs=* -js self.resizeBy(args[-3], args[0])
command! maximize -description "Maximize window"
    \ -js self.maximize()
command! maximizeH -description "Maximize window height"
    \ -js self.resizeTo(self.outerWidth, screen.availHeight)
command! maximizeW -description "Maximize window width"
    \ -js self.resizeTo(screen.availWidth, self.outerHeight)
command! minimize -description "Minimize window"
    \ -js self.minimize()
command! move -description "Move window by X Y"
    \ -nargs=* -js self.moveBy(args[0], args[1])
command! moveto -description "Move window to X Y"
    \ -nargs=* -js self.moveTo(args[0], args[1])
command! moveTL -description "Move window to top left"
    \ :js self.moveTo(0,0)
command! moveTR -description "Move window to top right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, 0)
command! moveBL -description "Move window to bottom left"
    \ :js self.moveTo(0, screen.availHeight-self.window.outerHeight)
command! moveBR -description "Move window to bottom right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, screen.availHeight-self.window.outerHeight)

" =============================================================================
"                                      _________ 
"                                     |         |
"                                     | STYLING |
"                                     |_________|

group temp
" define temp group for use by temp styles, etc
group user

map -b gc y:style -group=temp <C-v><C-v><Space>
map -b <extra>gs :emenu View.Page Style.
" map -b <extra><C-s> :emenu View.Page Style.No Style<CR>
map -b <extra><C-s> :set usermode!<CR>

" =============================================================================
"                            ___________________                               
"                           |                   |
"                           | DEVELOPMENT TOOLS |
"                           |___________________|
                            
group developer

map -b <extra>j :js!<CR>

" -----------------------------------------------------------------------------
" ,-------------------------,
" | Mozilla Developer Tools |
" '-------------------------'
command! webide :feedkeys! <S-f8>
command! browserconsole :feedkeys! <C-S-J>
command! devtools :execute "emenu Tools.Web Developer.Toggle Tools"
command! storageinspector :execute "emenu Tools.Web Developer.Storage Inspector"
map -b <extra>d -ex emenu Tools.Web Developer.Eyedropper<CR>

" -----------------------------------------------------------------------------
" ,---------------,
" | DOM Inspector |
" '---------------'
" inspect current content document
command! dominspector :dialog dominspector
" inspect current chrome document - chrome://browser/content/browser.xul
command! dominspectorchrome :js inspectDOMDocument(document.URL)
" 
" restore C-S-I shortcut for DOM Inspector (stolen by dev tools inspector)
map -b <C-S-I> -ex dominspector

" -----------------------------------------------------------------------------
" ,---------,
" | Firebug |
" '---------'
command! firebug :feedkeys! <C-f12>

" -----------------------------------------------------------------------------
" ,----------,
" | TileView |
" '----------'
js <<EOF
function viewTiledOn() {
    tileView.viewTiled = true; 
    tileView.drawTiledLayout();
}
function viewTiledOff() {
    tileView.viewTiled = false; 
    tileView.drawSelectedPanel();
}
function viewTiledToggle() {
    if (tileView.viewTiled) 
        viewTiledOff();
    else 
        viewTiledOn();
}
EOF

command! toggleViewTiled -js viewTiledToggle(); 
map <A-f1> -js viewTiledToggle()

" -----------------------------------------------------------------------------
" ,-----------------------,
" | Web Developer Toolbar |
" '-----------------------'
command! magnifier
    \ -bang
    \ -description "Display magnifier (! toggles)"
    \ -js bang ? toggleMagnifier() : WebDeveloper.PageMagnifier.createPageMagnifier();
command! magnifieroff
    \ -description "Turns off magnifier"
    \ -js WebDeveloper.PageMagnifier.removePageMagnifier();
command! stylesoff
    \ -description "Turns off styles via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(true, content.document);
command! styleson
    \ -description "Turns on styles previously disabled via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(false, content.document);
command! styleinfo
    \ -description "Show styles for selected element"
    \ :execute "emenu Tools.Web Developer Extension.CSS.Display Style Information"
command! togglestylesembedded :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Embedded Styles"
command! togglestyleslinked execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Linked Style Sheets"
command! togglestylesinline :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Inline Styles"
" note: toggle all styles has binding <Alt-Shift-A>
command! togglestylesall :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable All Styles"
command! togglestylesbrowser :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Browser Default Styles"

 js <<EOF
function toggleMagnifier() {
    if (document.getElementById("web-developer-page-magnifier-container").hidden)
        WebDeveloper.PageMagnifier.createPageMagnifier();
    else
        WebDeveloper.PageMagnifier.removePageMagnifier();
}
EOF

map -b zx :magnifier!<CR>

group user

" =============================================================================
"                                      _________ 
"                                     |         |
"                                     | CONTENT |
"                                     |_________|

" TODO: Write command to work on remote PDFs being viewed
"       - preferably by accessing file in cache
"       - otherwise by re-downloading

" PDF (local): view in Okular
command! oku -description "Open local PDF in Okular"
    \ execute 'run okular "' + decodeURIComponent(buffer.URL.substring(7)) + '"'


" =============================================================================


"                                 __________________ 
"                                |                  |
"                                | OTHER EXTENSIONS |
"                                |__________________|

" Autopagerize:
command! pagezipper :open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();<CR>
command! pagezipper opz<CR>
map <extra>z -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();

" Print What You Like:
command! prwul -description "run PrintWhatYouLike"
    \ :o javascript:(function(){if(window['ppw']&&ppw['bookmarklet']){ppw.bookmarklet.toggle();}else{window._pwyl_home=%22http://www.printwhatyoulike.com/%22;_pwyl_bmkl=document.createElement('script');_pwyl_bmkl.setAttribute('type','text/javascript');_pwyl_bmkl.setAttribute('src',_pwyl_home+'static/compressed/pwyl_bookmarklet_10.js');_pwyl_bmkl.setAttribute('pwyl','true');document.getElementsByTagName('head')[0].appendChild(_pwyl_bmkl);}})();

" DownThemAll:
command! dtamaagr -description "Open DownThemAll manager"
    \ -js self.DTA.openManager()

" Rikaisama:
" CSS - chrome://rikaichan/skin/popup-blue.css
" keybindings: stored as ASCII codes in rcxConfig.kb* entries
map -b <extra>x -js rcxMain.saveToFile()
command! rikLbOn -description "Rikaisama lookupbar on"
    \ -js rcxMain.lbToggle()
command! rikLbOff -description "Rikaisama lookupbar off"
    \ -js rcxMain.lbHide()
map -b <site>r :rikLbOn<CR>
map -b <site>R :rikLbOff<CR>

" USERSCRIPTS
" word highlight
map <site>h -ex emenu Tools.Greasemonkey.word highlight
" TeX The World
map <site>t -ex emenu Tools.Greasemonkey.TeX the world

" WEB APPS
" MS Translate
map -b <extra>t -js (function(){var s=content.document.createElement('script'); s.type='text/javascript'; s.src='http://labs.microsofttranslator.com/bookmarklet/default.aspx?f=js&to=en'; content.document.body.insertBefore(s, content.document.body.firstChild);})();

" PageZipper
" activate pagezipper bookmark (keyword pz)
map <A-p> :open pz<CR>
"command! pz -description "PageZipper"
    "\ -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();

"" TODO: finish
"js <<EOF
"(function() {
    "if (window['pgzp']) { 
        "_pgzpToggleBookmarklet();
    "} else {
        "window._page_zipper_is_bookmarklet = true;

        "window._page_zipper = document.createElement('script');
        "window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
"EOF


" =============================================================================
"                              _________________________ 
"                             |                         |
"                             | COMMAND IMPLEMENTATIONS |
"                             |_________________________|
"  ______________________________________________________________________________________ 
" /                                                                                      \
" | JAVASCRIPT                                                                           |
" | *  js ... code operates in chrome window namespace                                   |
" | *  :open javascript:(function(){ ... })() code operates in document window namespace |
" | note: FF's browser console <C-S-J> can be used to try out code in the chrome window  |
" |       (although some Pentadactyl variables aren't available)                         |
" |                                                                                      |
" | settings:                                                                            |
" |   dom.event.contextmenu.enabled                                                      | 
" |   dom.disable_window_flip (allow window raising/lowering)                            |
" |   dom.disable_window_move_resize                                                     |
" |                                                                                      |
" \______________________________________________________________________________________/


js <<EOF
closeAllToLeft = function (ord) {
    if (typeof(ord)==="undefined") ord = tabs.getTab().dactylOrdinal;
    // convert from 0- to 1-based  ==> -1  | 
    // end at previous tab         ==> -1  | ==> -2
    var ix = ord - 1;
    var prevTabIx = ix - 1;
    utils.closeTabsTo(prevTabIx)  
}
EOF

js <<EOF
closeAllToRight = function (ord) {
    if (typeof(ord)==="undefined") ord = tabs.getTab().dactylOrdinal;
    // convert from 0- to 1-based  ==> -1  | 
    // start from next tab         ==> +1  | ... cancel out
    var ix = ord - 1;
    var nextTabIx = ix + 1;
    utils.closeTabsFrom(nextTabIx)  
}
EOF

js <<EOF
var closeTabRange = function (firstSpec, endSpec) {
    firstSpec = firstSpec - 1;
    endSpec = endSpec;
    utils.closeTabsFromTo(firstSpec, endSpec, spec='');
}
EOF

js <<EOF
var openAllLinksInCB = function () {
    var a = window.readFromClipboard().split(/[ \t\n]+/); 
    for (i = 1; i < a.length; ++i) { 
        dactyl.open(a[i], {where:dactyl.NEW_TAB}); 
    };
}
EOF

js <<EOF
undob = function() {
    var currT = gBrowser.selectedTab;
    var altT = tabs.alternate;
    var ssService = Components.interfaces.nsISessionStore;
    var ssClass = Components.classes['@mozilla.org/browser/sessionstore;1']
    var ss = ssClass.getService(ssService);
    var closedTabs = JSON.parse(ss.getClosedTabData(window));
    var ct0 = closedTabs[0];
    ss.undoCloseTab(window, ct0);
    gBrowser.selectedTab = altT;
    gBrowser.selectedTab = currT;
}
EOF

" Create adjacent duplicate tab and go back in the browser history
js <<EOF
backt = function () { 
    tabs.cloneTab(tabs.getTab(), true);
    var backtListener = function () { 
        gBrowser.goBack(); 
        document.removeEventListener("DOMContentLoaded", backtListener, false);
    };          
    document.addEventListener("DOMContentLoaded", backtListener, false);
}
EOF
 
" Create adjacent duplicate tab and go forward in the browser history
js <<EOF
forwardt = function() {
    tabs.cloneTab(tabs.getTab(), true);
    var forwardtListener = function () {
        gBrowser.goForward();
        dupTB.removeEventListener("DOMContentLoaded", forwardtListener);
    };
    dupTB.addEventListener("DOMContentLoaded", forwardtListener);
}
EOF

" Create adjacent duplicate tab
js <<EOF
tabdupa = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    var dupTB = gBrowser.getBrowserForTab(dupT);
    getBrowser().moveTabForward();
}
EOF

command! yanktrueURL
    \ -description "Yank the uncoded URL of the current buffer"
    \ -js var text=decodeURIComponent(buffer.URL);
    \     dactyl.clipboardWrite(text);
    \     dactyl.utils.message(text);
command! yankfilenameorURL
    \ -description "Yank the unencoded filename or the hierarchical part of the current buffer's URL. Removes queries and fragments."
    \ -js var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     dactyl.clipboardWrite(text);
    \     dactyl.utils.message(text);

command! pwhash
    \ -description "Open Password Hasher"
    \ -nargs=0
    \ -js <<EOF
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;    
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
	var keyfield = content.document.getElementById('master-key')
	keyfield.value=user.mymasterpw;	
	var sitefield = content.document.getElementById('site-tag')
	sitefield.focus();	
    });
EOF
map -b <extra>p :pwhash<CR>

command! tr
    \ -description "Translate: tr FROM TO TEXT"
    \ -nargs=*
    \ -js <<EOF
    dactyl.open("https://translate.google.com.au/#" + args[0] + "/" + args[1] + "/" + args[2],
                {where:dactyl.NEW_TAB});
EOF



" ----------------------------------------------------------------------------- 

" shortcut to Wikipedia episode lists.
command! eplist -nargs=1 -js (eplist(args[0]))

js <<EOF
String.prototype.capitalize = function() {
    return this.replace(/\b\w/g,
                        function (c) { return c.toUpperCase(); });
}
function eplist (s) {
    var sConv = s.capitalize().replace(" ", "_");
    dactyl.open("www.wikipedia.org/wiki/List_of_" + sConv + "_episodes");
}
EOF


" ----------------------------------------------------------------------------- 

map -b <extra>w :toggleWayback<CR>
command! toggleWayback 
    \ -bang
    \ -description "Toggle web page and archive.org copy"
    \ -js bang ? toggleWayback({where: dactyl.NEW_TAB}) : toggleWayback()
js <<EOF
function toggleWayback(opts={}) {
    var url = content.location.href.toLowerCase();
    var waybackRegex = /https?:\/\/web\.archive\.org\/web\/(\d+)(id_)?\/(.*)/;
    var match = waybackRegex.exec(url);
    if (match) {
        dactyl.open(match[3], opts);
    }
    else {
        dactyl.open("http://web.archive.org/web/" + url, opts);
    }
}
EOF

" ----------------------------------------------------------------------------- 

map -b <site>s :toggleHTTPS<CR>
command! toggleHTTPS 
   \ -description "Toggle protocol between HTTP and HTTPS" 
   \ -js toggleHTTPS()
js <<EOF
function toggleHTTPS () {
    var url = content.location.href;
    var newurl;
    var sc_http  = "http://";
    var sc_https = "https://";
    if (url.indexOf(sc_http) == 0)
        newurl = url.replace(sc_http, sc_https);
    else if (url.indexOf(sc_https) == 0)
        newurl = url.replace(sc_https, sc_http);
    dactyl.open(newurl);
}
EOF

" ----------------------------------------------------------------------------- 

map -b <extra>k :kanjisearch!<CR>
command! kanjisearch 
    \ -bang -description "kanji search on jisho.org" 
    \ -js kanjiSearchJisho(dactyl.clipboardRead(), bang);
js <<EOF
function kanjiSearchJisho (s, newtab) {
    if (newtab)
        dactyl.open("http://jisho.org/search/"+s+"%20%23kanji",
                    {where:dactyl.NEW_TAB});
    else
        dactyl.open("http://jisho.org/search/"+s+"%20%23kanji");
}
EOF

" ----------------------------------------------------------------------------- 

command! popjisyo
    \ -bang
    \ -description "Add hints for Japanese via POPjisyo.com. With !, adds hints for English"
    \ -js bang ? popJisyoEtoJ() : popJisyo();

js <<EOF
popJisyoUrl = 'http://www.popjisyo.com/WebHint/AddHint.aspx?r=e';
function popJisyo(url) {
    if (!url) 
        url = content.location.href;
    location.href = popJisyoUrl + '&d=7&du=' + encodeURIComponent(url);
}
function popJisyoEtoJ(url) {
    if (!url) 
        url = content.location.href;
    location.href = popJisyoUrl + '&d=1&du=' + encodeURIComponent(url);
}
EOF


command! appendlinks
            \ -description "Append links to end of page"
    \ -js appendLinks();
command! appendlinkurls
            \ -description "Append link destinations to end of page"
    \ -js appendLinkUrls();
" trigger listlinks keyword bookmarklet
command! listlinks
            \ -description "List all links in page"
            \ :open listlinks

command! table2csv
    \ :open javascript:(function(){$('table').each(function(){var%20$table=$(this);$('<textarea>').css('width',$table.width()).css('height','400px').html($.map($table.find('tr'),function(tr){return%20$.map($(tr).find('th,%20td'),function(e){return'"'+$(e).text().replace('"','""').replace('\n','%20')+'"'}).join(',')}).join('&#13;&#10;')).insertAfter($table);})})()


js <<EOF
function appendLinks () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += '<a href=' + la[i].href + '>' + la[i].href + '</a><br>';
    d.body.insertAdjacentHTML(
        'beforeEnd', 
        '<br style = clear:both;><div><hr>Link Footnotes:<hr>' + tmpStr + '</div><hr>'
    );
}
function appendLinkUrls () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += la[i].href + '<br>';
    d.body.insertAdjacentHTML(
        'beforeEnd', 
        '<br style = clear:both;><div><hr>Link Footnotes:<hr><p>' + tmpStr + '</div><hr>'
    );
}
EOF

" ----------------------------------------------------------------------------- 

js <<EOF
function toggleUrl (x, y, x_canon, y_canon) {
    " General purpose URL toggle function: swaps x and y in URL "
    " If an argument is a regex, then canonical strings corresponding "
    " to x and y must be provided to be used in replacement."
    " If one of the search expressions may be a substring of the other,"
    " the larger must be passed as the first argument x."
    if (x_canon === undefined) x_canon = x;
    if (y_canon === undefined) y_canon = y;
    var url = content.location.href;
    var newurl;
    if (url.search(x) >= 0)
        newurl = url.replace(x, y_canon);
    else if (url.search(y) >= 0)
        newurl = url.replace(y, x_canon);
    dactyl.open(newurl);
}
EOF

" -----------------------------------------------------------------------------

js <<EOF
function imgToDataUri(img) {
    var canvas = content.document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    var dataUri = canvas.toDataURL("image/png");
    // data only, return dataUri.replace(/^data:image\/(png|jpg);base64,/, "");
    return dataUri;
}
dactyl.utils.imgToDataUri = imgToDataUri;
EOF

" =============================================================================
"                                   _______________ 
"                                  |               |
"                                  | SITE SPECIFIC |
"                                  |_______________|

" -----------------------------------------------------------------------------
" ,--------,
" | Google |
" '--------'
group google -locations=google.com,google.com.*

" restrict search to pages in a specific language
map -b <site>gl O&lr=lang_
" restrict search to pages originating in a specific country
map -b <site>gc O&cr=

group user

" ----------------------------------------------------------------------------- 
" ,-----,
" | EdX |
" '-----'
command! edx :runtime! edx.penta
autocmd DOMload courses.edx.org :edx

" ----------------------------------------------------------------------------- 
" ,----------,
" | Coursera |
" '----------'
group coursera -locations=www.coursera.org

set passkeys+='https://class.coursera.org/.*/lecture/.*':'hp-+fc<up><down><left><right>'

js <<EOF
function togglePaused() {
    var v = content.document.getElementById('c-video_html5_api');
    if (v.paused)
        v.play();
    else
        v.pause();
}
EOF
map -b <Space> -js togglePaused();

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | AnimeLyrics.com |
" '-----------------'
group animelyrics -locations=animelyrics.com

" Go to "Print view with kanji" if it exists, or else "Print view"
map <site>P <C-v>'Print<Space>view<f3><CR>

" -----------------------------------------------------------------------------
" ,----------,
" | about: * |
" '----------'

group about -locations=about:*,chrome:*

map -g about -b j <C-v><Down>
map -g about -b k <C-v><Up>
"
map -g about  J <C-v><PageDown>
map -g about  K <C-v><PageUp>
map -g about  <C-d> <C-v><PageDown>
map -g about  <C-u> <C-v><PageUp>
map -g about  gg <C-v><Home>
map -g about  G <C-v><End>

group user

" -----------------------------------------------------------------------------
" ,-------------,
" | Archive.org |
" '-------------'
group wayback -locations=archive.org

map -g wayback -b ct :toggleWaybackToolbar<CR>
map -g wayback -b gct :toggleWaybackToolbar!<CR>

" Wayback Toolbar Go To Previous Capture:
" ( Searches for a year (starting with '20' using FF link search,
"   then tabs backwards twice to land on back link and activates )
map -g wayback -b cb <C-v>'20<S-Tab><S-Tab><CR>

command! toggleWaybackToolbar
    \ -bang
    \ -description "Hides/shows Wayback Machine toolbar. With [!], toggles between regular and no-toolbar URLs"
    \ -js bang ? toggleWaybackToolbarUrl() : toggleWaybackToolbar();
js <<EOF
function toggleWaybackToolbar() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        var toolbar = content.document.getElementById("wm-ipp");        
        if (toolbar.style.display == "none")
            toolbar.style.display = "block";
        else 
            toolbar.style.display = "none";
    }
}
function toggleWaybackToolbarUrl() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        dactyl.open(match[1] + "id_" + match[3]);
    }
}
EOF

group user

"OTHER SITES:

group tipsonjap -locations=meadowlake001.blogspot.jp
" Tips on Japanese
" http://meadowlake001.blogspot.jp
command! widenSidebar -group tipsonjap
    \ -js <<EOF 
    var s=content.document.getElementById('sidebar');
    var c=content.document.getElementById('content');
    s.style.width='400px';
    c.style['margin-left']='400px';
EOF
group user

" -----------------------------------------------------------------------------
" ,--------,
" | BookZZ |
" '--------'
group bookzz -locations=bookzz.org

map -b <site>z :loginAndSearch<CR>

command! loginAndSearch
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());
map -b <extra>z 
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());

js <<EOF
var signinurl = "http://singlelogin.org/";
function loginAndSearch() {
    var searchId = content.document.getElementsByTagName("input")[0].value;
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function searchForId() {
	var searchFields = content.document.getElementsByTagName("input");
	searchFields[0].value = searchId;
	searchFields[1].click();
	curTB.removeEventListener("DOMContentLoaded", searchForId);
    } 
    curTB.loadURI(signinurl);
    curTB.addEventListener("DOMContentLoaded", searchForId);
}
EOF

group user

" -----------------------------------------------------------------------------
" ,------------,
" | Github.com |
" '------------'
group github -locations=github.com,githubusercontent.com,rawgit.com

map -b <site>h :togglehtmlview<CR>

command! togglehtmlview 
     \ -description "Toggle between HTML file and rendered view"
     \ -js toggleHTMLView();
js <<EOF
function toggleHTMLView () {
    var url = buffer.URL.toLowerCase();
    var newurl;
    if (url.contains("https://github.com")) {
        var rx = /https:\/\/github.com\/([^/\s]+\/[^/\s]+)\/blob(\/.*)/;
        var match = rx.exec(url);
        newurl = "https://rawgit.com/" + match[1] + match[2];
    }
    else if (url.contains("https://raw.githubusercontent.com"))
        newurl = url.replace("raw.githubusercontent", "rawgit");
    else if (url.contains("https://rawgit.com")) {
        var rx = /https:\/\/rawgit.com\/([^/\s]+\/[^/\s]+)(\/.*)/;
        var match = rx.exec(url);
        newurl = "https://github.com/" + match[1] + "/blob" + match[2];
    }
    dactyl.open(newurl);
}
EOF

group user

" -----------------------------------------------------------------------------
" ,-----------------------------,
" | Google Translate (Japanese) |
" '-----------------------------'

group gtransja -locations=translate.google.com/#ja,translate.google.com.au/#ja

js <<EOF
var showHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "left: 28px; top: 364px;"
}
var hideHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "-moz-user-select: none; left: 28px; top: 364px; display: none;"
}
var isVisibleHandWriteInput = function() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return ! hwBox.style.cssText.contains('display: none');
}
var toggleHandWriteInput = function() {
    if (isVisibleHandWriteInput())
        hideHandWriteInput();
    else
        showHandWriteInput();
}
EOF

command! handwrite -description "Show Handwritten Input box. With [!], toggle."
    \ -bang
    \ -js bang ? toggleHandWriteInput() : showHandWriteInput();
command! nohandwrite -description "Hide Handwritten Input box." -js hideHandWriteInput();

" map -b <SPACE><SPACE> <SPACE><SPACE>
" unmap -group gtransja <SPACE><SPACE>
map -b <SPACE><SPACE> -js showHandWriteInput();

group user

" -----------------------------------------------------------------------------
" ,----------------,
" | Graphemica.com |
" '----------------'

js <<EOF
var graphemicaCharSelect = function (words) {
    var s = words.join(' ');
    dactyl.execute('tabopen http://graphemica.com/search?q='+s);
    var charselectListener = function () {
        dactyl.execute('normal <link_desc>');
        document.removeEventListener("DOMContentLoaded", charselectListener, false);
    };
    document.addEventListener("DOMContentLoaded", charselectListener, false);
}
EOF

command! graphemicacharselect 
    \ -desc "Search for a character on Graphemica.com and select with hints to copy to clipboard."
    \ -nargs=*
    \ -js graphemicaCharSelect(args);


" -----------------------------------------------------------------------------
" ,-----------,
" | JSBin.com |
" '-----------'

group jsbin -locations=jsbin.com
" remove all existing jsbin autocmds
autocmd! -group jsbin

map -b <extra>m -js toggleMenu();
"map -modes pass-through -b <A-1> <C-1>
"map -modes pass-through -b <A-2> <C-2>
"map -modes pass-through -b <A-3> <C-3>
"map -modes pass-through -b <A-4> <C-4>
"map -modes pass-through -b <A-5> <C-5>
"map -modes pass-through -b <A-6> <C-6>
"map -modes pass-through -b <A-7> <C-7>
"map -modes pass-through -b <A-8> <C-8>
"map -modes pass-through -b <A-9> <C-9>

js <<EOF
function toggleMenu() {
    var menu = content.document.getElementsByClassName('menu')[0];
    if (menu.className.endsWith(' open'))
        menu.className = menu.className.slice(0,-5);
    else
        menu.className += ' open';
}
EOF

set eht+=[m]:.menu,select[id=library]

js <<EOF
    \ hints.addMode(
    \   'm','JSBin menu',
    \   function(e) { 
    \     if (e.className.contains('toppanel-hide'))
    \       e.click();
    \     else if (e.className.contains(' open'))
    \         e.className = e.className.replace(' open', '');
    \     else
    \         e.className += ' open';
    \   }
    \ );
EOF

group user

" ----------------------------------------------------------------------------- 
" ,-----------,
" | Jisho.org |
" '-----------'
"
group jisho -locations=jisho.org
" remove all existing jisho autocmds
autocmd! -group jisho

map -b <site>r :toggleromaji<CR>

" toggleromaji: adds/removes #romaji tag to toggle between kana and romaji:
command! toggleromaji 
     \ -description "Toggle between kana and romaji"
     \ -js toggleRomaji();
js <<EOF
var toggleRomaji = function() {
    var url = buffer.URL;
    var romtag = "%23romaji";
    if (url.contains(romtag))
        newurl = url.replace(romtag,"");
    else
        newurl = url + "%23romaji";
    dactyl.open(newurl)
}
EOF

" Hints modes.
" TODO: work out site/group-specific hinting.
"       - autocmd to reset eht and hints.addMode?
"       - use common dispatch function in hints.addMode?
"
set eht+=[keKE]:span[class=text]
set eht+=[l]:a[class="concept_light-status_link"]

js <<EOF
    \ hints.addMode(
    \   'k','open kanji details',
    \   function(e) { 
    \     dactyl.open(decodeURIComponent("http://jisho.org/search/" +
    \                                    e.textContent +
    \                                    "%2523kanji"));
    \   }
    \ );
EOF
js <<EOF
    \ hints.addMode(
    \   'e','open sentence examples',
    \   function(e) { 
    \     dactyl.open(decodeURIComponent("http://jisho.org/search/" +
    \                                    e.textContent +
    \                                    "%2523sentences"));
    \   }
    \ );
EOF
js <<EOF
    \ hints.addMode(
    \   'K','open kanji details in new tab',
    \   function(e) { 
    \     dactyl.open(decodeURIComponent("http://jisho.org/search/" +
    \                                     e.textContent +
    \                                     "%2523kanji"), 
    \                 {where:dactyl.NEW_TAB});
    \   }
    \ );
EOF
js <<EOF
    \ hints.addMode(
    \   'E','open sentence examples in new tab',
    \   function(e) { 
    \     dactyl.open(decodeURIComponent("http://jisho.org/search/" +
    \                                    e.textContent +
    \                                    "%2523sentences"),
    \                 {where:dactyl.NEW_TAB});
    \   }
    \ );
EOF
js <<EOF
    \ hints.addMode(
    \   'l','links drop down',
    \   function(e) { 
    \     var dd_id = e.getAttribute("data-dropdown");
    \     var dd = content.document.getElementById(dd_id);
    \     dactyl.echo(dd.style.left);
    \     if (parseInt(dd.style.left) < -100) {
    \       dd.style.left = "0px";
    \     } else {
    \       dd.style.left = "-99999px";
    \     } 
    \   }
    \ );
EOF

" Kanji style
style -name=kanji_light
    \ jisho.org 
    \ .kanji .character, .kanji_light .character {
    \     font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3","游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif !important;
    \ } 
    \ .kanji .character:hover, .kanji_light .character:hover {
    \     font-family:  "HiraKakuPro-W3","Hiragino Kaku Gothic Pro W3","Hiragino Kaku Gothic Pro","ヒラギノ角ゴ Pro W3","メイリオ",Meiryo,"游ゴシック",YuGothic,"ＭＳ Ｐゴシック","MS PGothic","ＭＳ ゴシック","MS Gothic",sans,sans-serif !important;
    \ }
command! kanjilight
    \ -description "Light style kanji"
    \ styleenable -group jisho -name kanji_light
command! kanjiheavy
    \ -description "Heavy style kanji"
    \ styledisable -group jisho -name kanji_light
command! kanjitoggle
    \ -description "Toggle heavy/light kanji style"
    \ styletoggle -group jisho -name kanji_light


" Remove arrows from details links

js <<EOF
function fixDetailsLinks() {
    var links = content.document.getElementsByClassName("light-details_link")
    for (i=0; i<links.length; ++i)
        links[i].textContent = links[i].textContent.slice(0, -2);
}
EOF

command! fixdetailslinks 
     \ -description "Remove arrows from `details' links"
     \ -js fixDetailsLinks();
autocmd DOMLoad jisho.org :fixdetailslinks


js <<EOF
function processEntries () {
    document.extraSearchEngines = {
        "tangorin search": "http://tangorin.com/dict.php?dict=general&s=%s",
        "Forvo pronunciation": "http://www.forvo.com/search/%s",
        "Tatoeba example sentences": "http://tatoeba.org/eng/sentences/search?query=%s"
    }
    document.verbSearchEngines = {
        "Verbix verb conjugation": "http://www.verbix.com/webverbix/go.php?T1=%s&D1=51&H1=151",
        "Japanese Verb Conjugator": "http://www.japaneseverbconjugator.com/VerbDetails.asp?txtVerb=%s"
    }
    document.kanjiSearchEngines = {
        "SLJFAQ kanji search": "http://kanji.sljfaq.org/soft-keyboard.html#?=%s",
        "Red Finch kanji search": "http://redfinchjapanese.com/?action=kanji_dictionary?=%s"
    }
    document.entryNodes = content.document.getElementsByClassName("concept_light");
    function getEntryName(x) {
        return String.trim(x.getElementsByClassName("text")[0].textContent);
    }
    document.results = map(document.entryNodes, getEntry);
    function getEntryStatusLinks(x) {
        return x.getElementsByClassName("concept_light-status_link");
    }
    function getEntryLinksDropdown(x) {
        var links = getEntryStatusLinks(x);
        var dropdownId;
        for (i=0; i<links.length; ++i) {
            if (links[i].textContent == "Links")
                dropdownId = links[i].getAttribute("data-dropdown");
        return document.getElementById(dropdownId);
        }
    }
}
EOF

command! shrinksod
     \ -description "Halve the dimensions of stroke order diagrams"
     \ -js shrinkSOD();
command! ss
     \ -description "Halve the dimensions of stroke order diagrams"
     \ -js shrinkSOD();
autocmd DOMLoad jisho.org :shrinksod
autocmd LocationChange jisho.org :shrinksod

js <<EOF
function shrinkSOD() {
    var svgelts=content.document.getElementsByTagName("svg");

    // NOTE: sod class must be first or only class
    function isSOD(x) {
        return x.getAttribute('class').slice(0,20)=="stroke_order_diagram";
    }
    var sods = [].filter.call(svgelts, isSOD);

    // NOTE: assume length unit is "px" or other 2-char unit
    for (i=0; i<sods.length; ++i) {
        var style = sods[i].style;
        var newheight = parseInt(style.height) / 2;
        var newwidth = parseInt(style.width) / 2;
        // NOTE: crude test to see if previously shrunken
        if (newheight < 40) continue;
        var hunit = style.height.slice(-2); 
        var wunit = style.width.slice(-2);
        sods[i].setAttribute(
            "style", 
            "height: " + newheight + hunit + "; width: " + newwidth + wunit + ";"
        );
    }
}
EOF

js <<EOF
function repositionModal() {
    var modal = content.document.getElementsByClassName('reveal-modal')[0];
    var ypos = content.window.pageYOffset + 100;
    modal.style.top = ypos + "px";
}
EOF
command! repositionmodal
     \ -description "Reposition modal box to scroll position"
     \ -js repositionModal();
map -b <extra>M :repositionmodal<CR>


group user


" -----------------------------------------------------------------------------
" ,-------------------,
" | StackOverflow.com |
" '-------------------'

group stackexchange -locations=stackoverflow.com,stackexchange.com,superuser.com

map -modes insert <A-k> <S-<>kbd<S->><S-<>/kbd<S->><Left><Left><Left><Left><Left><Left>

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | Userscripts.org |
" '-----------------'

" FIXME
"
js <<EOF
function userscriptsToMirror() {
    alert("triggered");
    var url = buffer.URL;
    var rx = /https?:\/\/userscripts.org\/(.*)/;
    var newurl;
    var match = rx.exec(url.toLowerCase());
    if (match)
        dactyl.open("http://userscripts-mirror.org/" + match[1]);
    else
        dactyl.utils.message("userScriptsToMirror: Address doesn't match: " + url);
}
EOF

autocmd LocationChange userscripts.org :js userScriptsToMirror();

" -----------------------------------------------------------------------------
" ,---------------,
" | Wikipedia.org |
" '---------------'

command! wpapplycss :source ~/.pentadactyl/wikipedia.css


" =============================================================================
"                                       _______ 
"                                      |       |
"                                      | NOTES |
"                                      |_______|

" ----------------------------------------------------------------------------- 
" ,-----------------,
" | USEFUL COMMANDS |
" '-----------------'
"
" call function defined in document: content.wrappedJSObject.page_func()
" echo in dactyl status bar: dactyl.echo(''); 
" current tab:  tabs.getTab()
" current tab number:  tabs.getTab().dactylOrdinal
" current selection: buffer.currentWord
" current URL: buffer.URL
" alternative to :execute: :js CommandExMode().open(exCommandString) 
" number of tabs: tabs.count
" get tab with index i: tabs.getTab(i)
" NOTE: index used in tabs.getTab is zero-based
"       ordinal returned from .dactylOrdinal is 1-based
"

" ----------------------------------------------------------------------------- 
" ,------------------,
" | Removed Commands |
" '------------------'

" js hints.addMode('0','Force open in current tab',function(elem) dactyl.open(elem.href));
"command! outputtabhrefs :tabdo :execute "!echo >> \"Pentadactyl Output " + Date().slice(0,15) + "\" " + content.location.href
"" Output list of tab hrefs
"map -b t> :outputtabhrefs<CR>
"" Output list of tab hrefs followed by a blank line
"command! tabhrefs :normal t> <C-x>0
"map -b t. :tabhrefs<CR>

"" Output newline in 'Pentadactyl Output <Date>' file:
"command! outputnewline :execute "!echo >> \"Pentadactyl Output " + Date().slice(0,15) + "\""
"map -b <C-x>0 :outputnewline<CR>


" ============================================================================= 


