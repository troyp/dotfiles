#                                                            -*- shell-script -*-
[[ ! -z $DEBUG  ]] && echo "sourcing .sh-aliases"

# load private aliases
[[ -e ~/.sh-functions ]] && source ~/.sh-functions
[[ -e ~/.sh-aliases-private ]] && source ~/.sh-aliases-private

#-------------
# ALIAS NOTES.
#-------------
# to override: use \ or '' (eg. \ls or 'ls')
# to "escape" ' inside '' (when you need both ' and " in alias): use '"'"'
#    (doesn't really escape - it ends string, concatenates string "'" (a single
#     quote) and concatenates a new string that extends to the end of the alias)
#   or: use '\'' (end string, concatenate character ', open string)
# C-A-e ("shell-expand-line") does inline alias, word and history expansion
#     (note: will recursively expand aliases in a history expansion.)
#     (note: "alias-expand-line" and "history-and-alias-expand-line" are also
#             available, but not bound by default.)
# A trailing space in an alias causes the next word to be alias-expanded as well

#-----------------------------------
# DEBIAN-SPECIFIC ALIASES: PACKAGES.
#-----------------------------------
alias sapt='sudo apt-get'
alias apd=aptitude
alias aptc='apt-cache'
alias aptf='apt-file'
# --- install ---
alias saptu='sudo apt-get update'
alias sapti='sudo apt-get install'
alias sdebi='sudo dpkg -i'
alias sdebr='sudo dpkg -r'
alias saptar='sudo apt-add-repository'
sapsi() {
    apdn "$@" |
        iselect -kj:KEY_DOWN -kk:KEY_UP -ma |
        cuts 2 |
        xargs sudo apt-get install;
}
sapsdi() {
    aptitude search '?and('`tr " " "," <<<"$@"`')' |
        iselect -kj:KEY_DOWN -kk:KEY_UP -ma |
        cuts 2 |
        xargs sudo apt-get install;
}
# --- search ---
alias apds='aptitude search'    # find matching packages
apdv() { aptitude search "$0" | less; }
apdn() {
    (    # search by package name (terms ANDed)
        srchstr="";
        for term in "$@"; do
            srchstr+="?name($term)";
        done;
        aptitude search "$srchstr";
    )
}
alias aptcs='apt-cache search'  # find matching packages
alias aptff='apt-file find'  # (find==search) find packages containing matching files
# --- info ---
alias aptcp='apt-cache policy'  # show installed version, candidate, repository
alias aptcm='apt-cache madison' # show candidate versions, repos in table
alias aptcsh='apt-cache show'  # show package records
alias debpkg="dpkg-deb -I j804_amd64.deb|grep -oP '(?<=Package:\t).*'"    # package installed by .deb file
# --- files ---
alias dplist='dpkg -l'   # list package names matching pattern, eg. dplsit 'dbus*'
dplistexe () {
    for f in `dpkg -L "$1"`; do
        if [[ -f "$f" ]] && [[ -x "$f" ]]; then
            echo "$f";
        fi;
    done;
}
alias debpfl='apt-file list'  # list contents of matching packages
alias debpifl='dpkg-query -L' # list files installed by a package
alias debdebfl='dpkg-deb -c'   # list files contained in deb
alias aptgetkey='sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys'  # Ubuntu
# --- other ---
alias dpfind='dpkg -S'   # find package, location, man file location of a command
alias dp-remove-broken-package='dpkg --remove --force-remove-reinstreq'
alias dpregex='ara'
alias aptsh='sudo aptsh'
#--------------------------------
# DEBIAN-SPECIFIC ALIASES: OTHER.
#--------------------------------
alias listinstalled-manual="comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)"
alias synaptic_enable_quicksearch='sudo apt-get install apt-xapian-index; sudo update-apt-xapian-index -vf'
alias enable-beep='sudo modprobe pcspkr'
alias disable-beep='sudo modprobe -r pcspkr'
alias list-repos='inxi -r'
alias alts='sudo update-alternatives --config'
alias galts=galternatives    # graphical alternatives editor
alias lsalts='update-alternatives --get-selections | vimpager'
# filter-in-default-PATH: filters list of paths/programs for those on path (note: will match substrings)
# TODO: only pass when directory matches exactly
alias filter-in-default-PATH='grep -E `echo ${ubuntu_default_PATH//:/\|}`'
alias filter-exec-in-default-PATH='grep -E `echo ${ubuntu_default_PATH//:/\/.+\|}`'
alias fix-kubuntu-1604-video-thumbs='for f in ffmpegthumbs.so gsthumbnail.so rawthumbnail.so; do sudo ln -s /usr/lib/x86_64-linux-gnu/plugins/$f /usr/lib/x86_64-linux-gnu/qt5/plugins/; done'

# ----------------------
#  KDE-SPECIFIC ALIASES.
# ----------------------
alias kderepl='qdbus org.kde.plasma-desktop /MainApplication showInteractiveKWinConsole'
alias kde-view-places-file='/home/troy/.local/share/user-places.xbel'
alias kde-view-bookmarks-file='view /home/troy/.kde/share/apps/kfile/bookmarks.xml'
alias plasmarestart4='kbuildsycoca4 && kquitapp plasma-desktop && kstart plasma-desktop'
alias plasmarestart5='kbuildsycoca5 && kquitapp5 plasmashell && kstart5 plasmashell'
alias kfconf=kf5-config
alias kfconflist='kf5-config --types'
alias plasma-applets-edit='editor ~/.config/plasma-org.kde.plasma.desktop-appletsrc'

#---------------------
# CD & MKDIR ALIASES.
#---------------------
alias -- -='cd -'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd....='cd ../../..'
alias cd.....='cd ../../../..'
alias md='mkdir -p'
alias md='mkdir -pv'
# alias rd='source ranger ranger'    # navigate to new dir with ranger
alias rd='ranger --choosedir=$HOME/.ranger-choosedir; cd `cat $HOME/.ranger-choosedir`'
alias rpick='ranger --choosefiles $HOME/.ranger-choosefiles'
alias rpickone='ranger --choosefile $HOME/.ranger-choosefile'
alias rpickdir='ranger --choosedir $HOME/.ranger-choosedir'

#------------
# LS ALIASES.
#------------
alias lsg='ls | grep -iP'
alias ls='ls --group-directories-first --color=auto --time-style=+" %d.%m.%y "'
alias lsv='ls -C -w $COLUMNS --color=always | less -R'
alias ls1='ls -1'
alias lsc='ls --color=always'
alias ll='ls -l'   # list details
alias llc='ll --color=always'
alias lll='ls -l --time-style=+"           %a %d.%b.%y ''
 %T  %a %d.%b.%y "'  # detailed list with weekday, plus mod. time for recent files
alias lln='ls -lv'   # detailed list natural sort
alias llt='ls -ltr'  # detailed list sort by last modified (latest at bottom)
alias llx='ls -lX'   # detailed list sort by extension
alias lls='ls -lS'   # detailed list sort by file size
alias la='ls -Al'    # detailed list dotfiles
alias cutlsa='cuts 7'    # extract filename from ls -a output
alias lac='ls -Al --color=always'  # detailed list dotfiles, colored output to pipe
lap () {
    [[ "$1" =~ ^--?h(elp)?$ ]] && echo "laless [DIR]\tShow long directory contents in pager." && return 0;
    ls --group-directories-first --color=auto --time-style=+" %d.%m.%y " -Al --color=always "${1:-.}" |
        $PAGER
}
alias lacc='ls -Al --time=access'    # detailed list access-time dotfiles
alias lr='ls -lR'    # detailed list recursive
alias lc='ls -Cp'    # filenames only, append / to directories
# list full paths
alias lsfull='for f in "$PWD"/* "$PWD"/.*; do echo "$f"; done | sort'
# list subdirectories only (including links to directories):
alias lsdirs="ls -1p | grep -P '(?=/$)' | xargs -d'\n' ls -d --color=auto"
alias lldirs="lsdirs -l"
alias ladirs="ls -1Ap | grep -P '(?=/$)' | xargs -d'\n' ls -d --color=auto"  # incl. hidden dirs
alias lladirs="ladirs -l"
alias lldirsl='ls -lp | grep -P "(\S ?)+/$|(\S ?)+ (?=-> (\S ?)+$)"'  # list details: dirs/links
# list files only (including links to files):
alias lsfiles="ls -p | grep -v '/$' | xargs -d'\n' ls -d --color=auto"
alias llfiles="lsfiles -l"
alias lafiles="ls -Ap | grep -v '/$' | xargs -d'\n' ls -d --color=auto"
alias llafiles="lafiles -l"
alias llfilesbysize='llfiles | sort -k 5nr'    # list files with details, from largest down

alias lsod='LC_COLLATE=C ls'      # sort dotfiles, then UC, then LC
alias laod='LC_COLLATE=C ls -la'
alias lsatimes='for x in *; do stat -c"%n	%x" -- "$x"; done | tabs2cols' # if broken, check tab
alias sortatimes='for x in *; do stat -c"%x	%n" -- "$x"; done | tabs2cols | sort'
# alias lsexec='lafiles | dolines if [[ -x "$x" ]]; then echo "$x"; fi; done'
alias lsexec='lafiles | filterexec'
alias lsi='du -hsc'    # list total sizes of files and directories
alias treea='tree -a -I '.git' --matchdirs --prune'   # list all files and dotfiles, exclude git directory

# ------------------
# FILE INFO ALIASES.
# ------------------
alias showpermissions='stat --printf "%-20n  %a  %A\n"';
alias basedir='basename $PWD'
alias pwdb='basename $PWD'
alias pwdp='dirname $PWD'
filename-base ()  { echo "${1%.*}"; }
filename-ext () { echo "${1##*.}"; }
alias mplayer-info='mplayer -frames 0 -identify'


# --------------------
# ENVIRONMENT ALIASES.
# --------------------
alias lsenv='export | less'    # list environment variables (alphabetical)
alias lsenvf='set | less'      # list environment variables and functions (alphabetical)
alias lsenvall='env | less'    # list entire environment

# --------------------------
# FILE MANIPULATION ALIASES.
# --------------------------
# --- looping over files ---
alias dofiles='for x in *; do'    # process each file in current directory
# eg. mapfiles img-info
# eg. mapfiles img-info '| cuts 1'    OR    mapfiles img-info \| cuts 1
mapfiles() { first="$1"; shift; for x in *; do eval "$first '$x' $*"; done; };
# eg. loopfiles 'img-info "$x" | cuts 1'
loopfiles() { for x in *; do eval "$*"; done; };
alias docbfiles='xsel -ob | files-from-url | dolines' # loop over files copied in clipboard (convert from file:// URL)
alias docburls='xsel -ob | dolines'                   # loop over urls copied to clipboard
alias docburls-reversed='xsel -ob | tac | dolines'    # loop over urls copied to clipboard (reverse order)
alias dosubdirs='for x in */; do x="${x%/}";'    # process each subdir in current directory

# --- editing files ---
alias sed-file='sed -i.bak' # edit file in-place (makes backup) sed-file 's/old/new/g' f.ext
alias editchoose='iselect -ma | xargs emacsclient' # select a file to edit in emacs
alias scriptvi='edit-script vim'
alias scriptem='edit-script emacsclient'

# --- copying files ---
alias name2fat='perl -pe '"'"'s/\+|:/ - /g and s/\[<>\/\\?+:"\]//g'"'"''  # filename -> FAT-compat
alias rsmerge='rsync -aH -v --progress'    # merge (do not delete files in target removed from origin)
alias rssync='rsync -aH --delete -v --progress'  # sync (delete files in target removed from origin)
alias rsdiff='rsync -rnc --delete -v'  # compare two directories by simulating the process of copying the first to overwrite the second
copyto() {
    dest="${1:-.}";
    while read -r x || [[ -n "$x" ]]; do
        cp -t "$dest" "$x";
    done;
}
alias copyselect='fzf --ansi --exact --border --multi --bind=ctrl-i:toggle+down | copyto'
alias rscopyto='rsync -rc --delete -v .'  # copy current directory to another directory, deleting its original contents
alias rsupdate='rsync -auH -v --progress'
alias cppath='cp --parents'   # copy a relative file-path into a dir
# --- icp ---
# note: aliasing cp to icp (and mv to imv):
# alias cp='icp --pass-through -i' will check before overwriting on pass-through,
# but when used with one argument (as icp), it will check twice (once within icp,
# then again when passed through to cp)
# alias cp='icp --pass-through cp -i'

# --- linking files ---
alias symlink='ln -s'
alias sln='ln -s'
alias msymlink='mmv -s'  # mmv multiple symlink using wildcards, eg.  msymlink *.pdf #1_link.pdf
alias ln-in-dir-from-file='ln -t'
alias ln-from-file-to-file='ln -T'

# --- other ---
alias irm='rm -i'  # interactive rm: prompt before removal
alias diff='colordiff -u'
alias diffdir='colordiff -rqb'
alias chmodx='chmod a+x'
alias file-owner='stat -c "%U"'
alias setchecksum='setfattr -n user.checksum -v'   # eg. setchecksum 3FFA89C foo.gz
alias setversion='setfattr -n user.version -v'     # eg. setversion 3.1 foo.gz


#-----------------------
# FILE RENAMING ALIASES.
#-----------------------

alias rn='mv -iT'    # use mv to rename (ask before overwrite, treat dest as filename, not dir)
alias lowercase-files='dofiles mv -i "$x" "$(echo "$x" | tolowercase)"; done'
alias hilitcase-files='dofiles mv -i "$x" "$(echo "${x%.*}" | tohilitcase).${x##*.}"; done'
# alias mv='mv -i'
# alias mv='imv --pass-through --command mv -i'


# ALTERNATIVES TO WDIRED (C-x d <directory> C-x C-q)
alias emdir="env EDITOR=emacs vidir"                        # emacs/vidir rename
alias qmv="qmv -f 'do'"                                     # vim/qmv rename
alias qmv2="qmv -f 'dc' -o autowidth,spaces,width=80,swap"  # vim/qmv 2 col rename
alias emv="qmv -f 'do' -e 'emacsclient -nw'"                # emacs/qmv rename
alias emv2="qmv -f 'dc' -o autowidth,spaces,width=80,swap -e 'emacsclient -nw'" # 2 col rename
alias ecp="qcp -f 'do' -e 'emacsclient -nw'"                # emacs/qcp copy
alias ecp2="qcp -f 'dc' -o autowidth,spaces,width=80,swap -e 'emacsclient -nw'" # 2 col copy

# RENAME (PERL)
# note: to use perl expr as replace, use s///e

alias renn='rename -n'    # rename preview (dry-run)
alias ren=rename
alias reren='(x=$(fc -ln -1); eval $x:gs/renn/ren/)'    # rerun preceding "renn" test run as "ren"

renr() {
    find . -type f -exec rename "$1" {} \;
}
rennr() {
    find . -type f -exec rename -n "$1" {} \;
}
alias add-png-ext="ren 's/\s*$/.png/' -- *"
# ren-year-to-end: eg. ren '(2000)  file name.more.pdf' -> 'file name.more (2000).pdf'
alias ren-year-to-end='ren '"'"'s/^(\([0-9]+\)) *-? *(.*)\.(.+)$/$2 $1.$3/'"'"''
alias ren-year-to-end-preview='ren -n '"'"'s/^(\([0-9]+\)) *-? *(.*)\.(.+)$/$2 $1.$3/'"'"''
alias ren-dot-to-space='ren '"'"'s/\.(?=[^.]+\.)/ /g unless /^\./'"'"''
alias ren-dot-to-space-preview='ren -n '"'"'s/\.(?=[^.]+\.)/ /g unless /^\./'"'"''
alias ren-space-to-dot="ren 'tr/ /./'"
alias ren-underscore-to-space="ren 'tr/_/ /'"
alias ren-space-to-underscore="ren 'tr/ /_/'"
alias ren-uppercase="ren 'tr/a-z/A-Z/'"
alias ren-lowercase="ren 'tr/A-Z/a-z/'"
alias ren-camelcase='ren '"'"'s/(\b\w)/\u$1/g; tr/ //d'"'"
alias renn-camelcase='renn '"'"'s/(\b\w)/\u$1/g; tr/ //d'"'"
# ren-author-to-surname-first: eg. rename 'Greg Egan' -> 'Egan, Greg' Multiple middle names OK.
alias ren-author-to-surname-first="ren '"'s/^(.*) ([-A-Za-z]+)$/$2, $1/'"'"
# FIXME:
# ren-strip-extra-from-year: eg. rename 'file (extra-info, 2000).pdf' -> 'file (2000).pdf'
alias ren-strip-extra-from-year="ren 's/\([-\w_.']+, ?([0-9]{4})\)\.(\w+)"'$/($1).$2/'
alias ren-strip-extra-from-year-preview="ren -n '"'s/\([-\w_.'"'"']+, ?([0-9]{4})\)(?=\.\w+)$/($1)/'
alias ren-strip-left-of-number='ren '"'"'s/[^0-9]*(?=[0-9]+)//'"'"
alias ren-strip-left-of-number-preview='ren -n '"'"'s/[^0-9]*(?=[0-9]+)//'"'"
alias ren-extract-number='ren '\''s/[^1-9]*([0-9]+).*?(([.][^.]+)?)/$1$2/'\'
alias ren-extract-number-preview='ren -n '\''s/[^1-9]*([0-9]+).*?(([.][^.]+)?)/$1$2/'\'
alias ren-extract-number-ext='ren '\''s/[^1-9]*([0-9]+).*(\.[^.]+)/$1$2/'\'
alias ren-extract-number-ext-preview='ren -n '\''s/[^1-9]*([0-9]+).*(\.[^.]+)/$1$2/'\'
alias ren-extract-number-no-ext='ren '\''s/[^1-9]*([0-9]+).*/$1/'\'
alias ren-extract-number-no-ext-preview='ren -n '\''s/[^1-9]*([0-9]+).*/$1/'\'
# ren-titlecase: note - removes newlines from titles
alias ren-titlecase='ren '\''use Text::Autoformat; my @parts=split /\./; my $n=$#parts; my @newparts = map {autoformat( $_, {case=>qw(highlight)})} @parts[0..$n]; $newparts[$n] = $parts[$n]; $_ = join(".",@newparts); s/\n//g'\'
alias ren-titlecase-preview='ren -n '\''use Text::Autoformat; my @parts=split /\./; my $n=$#parts; my @newparts = map {autoformat( $_, {case=>qw(highlight)})} @parts[0..$n]; $newparts[$n] = $parts[$n]; $_ = join(".",@newparts); s/\n//g'\'
alias ren-manga-add-leading-zero='ren '\''s/第([0-9]+)巻/第0$1巻/'\'
alias ren-parenthesize-filename="ren '"'s/^(.*)\.(?!gz$)(\w+(.gz)?)$/($1).$2/'"'"
alias ren-author-dash-title-to-surname-first="ren -n '"'s/^(((([A-Za-z][-A-Za-z]*|[A-Za-z][.])[ ]?)[ ]?)+) ([A-Z][-a-z]*) - (.*)$/$5, $1 - $6/'"'"
alias ren-2-digits-before-ext="rename '"'s/(?<!\d)(\d)\.([^.]+)$/0$1.$2/'"' *"
alias renn-2-digits-before-ext="rename -n '"'s/(?<!\d)(\d)\.([^.]+)$/0$1.$2/'"' *"
alias ren-3-digits-before-ext="rename '"'s/(?<!\d)(\d)\.([^.]+)$/00$1.$2/'"' *; rename '"'s/(?<!\d)(\d\d)\.([^.]+)$/0$1.$2/'"' *"
alias renn-3-digits-before-ext="rename -n '"'s/(?<!\d)(\d)\.([^.]+)$/00$1.$2/'"' *; rename -n '"'s/(?<!\d)(\d\d)\.([^.]+)$/0$1.$2/'"' *"
alias ren-2-digits-at-start="rename '"'s/^(\d)(?!\d)/0$1/'"' *"
alias renn-2-digits-at-start="rename -n '"'s/^(\d)(?!\d)/0$1/'"' *"
alias ren-3-digits-at-start="rename '"'s/^(\d)(?!\d)/00$1/'"' *; rename '"'s/^(\d\d)(?!\d)/0$1/'"' *"
alias renn-3-digits-at-start="rename -n '"'s/^(\d)(?!\d)/00$1/'"' *; rename -n '"'s/^(\d\d)(?!\d)/0$1/'"' *"
alias ren-2-digits-first-occ="rename '"'s/(?<!\d)(\d)(?!\d)/0$1/'"' *"
alias renn-2-digits-first-occ="rename -n '"'s/(?<!\d)(\d)(?!\d)/0$1/'"' *"
alias ren-3-digits-first-occ="rename '"'s/(?<!\d)(\d)(?!\d)/00$1/'"' *; rename '"'s/(?<!\d)(\d\d)(?!\d)/0$1/'"' *"
alias renn-3-digits-first-occ="rename -n '"'s/(?<!\d)(\d)(?!\d)/00$1/'"' *; rename -n '"'s/(?<!\d)(\d\d)(?!\d)/0$1/'"' *"
alias ren-fat32='ren "s/:/ -/g; tr/\\\"?;+\\\\/'"'.,&|/"'"'
alias renn-fat32='renn "s/:/ -/g; tr/\\\"?;+\\\\/'"'.,&|/"'"'
alias ren-mp3='rename "s/\W*[[(](\w|-)+[.-]com[])]\.mp3$/.mp3/i"'
alias renn-mp3='rename -n "s/\W*[[(](\w|-)+[.-]com[])]\.mp3$/.mp3/i"'

## MMV: simple wildcard-based renaming
# mmv: eg.   mmv '*.bk.*' '#1.#2'
# note: wildcards don't match leading ".", need to specify explicitly
alias mmv-move='mmv -x'       # move source to target
alias mmv-copy='mmv -c'       # copy source to target
alias mmv-append='mmv -a'     # append source to target
alias mmv-link='mmv -a'       # link source to target
alias mmv-symlink='mmv -a'    # symlink source to target


# -------------------------
# FILE SEARCH/INFO ALIASES.
# -------------------------
# gr: pcregrep search - shows line number and color if output is to a terminal, just the text if output is to a pipe
gr () { if [[ -t 1 ]]; then pcregrep -in --color=auto "$@"; else pcregrep -i --color=auto "$@"; fi; }
alias grep='grep --color=auto'
alias grepi='grep -i --color=auto'      # color, case-insensitive grep
alias greps='grep -F'                   # fixed string grep
alias grepis='grep -F'                  # fixed string grep (case-insensitive)
alias grepc='grep --color=always'       # color grep for pipes
alias grepic='grep -i --color=always'   # color grep for pipes (case-insensitive)
alias grepn='grep -Hn --color=always'   # grep with filename and line no.
alias grepin='grep -iHn --color=always' # grep with filename and line no. (case-insensitive)
alias grepbin='grep -iHn -B1 --color=always' # grep, show prior line (filename, line no,case-insens)
alias grepr='grep -iHnr --color=always' # recursive grep with filename and line no. (case-insens)
alias grepsys='sudo grep -r -D skip'    # recursive grep with sudo, skip device files
alias grepnot='grep -v'
alias grepo='grep -o'                   # only output matching substring
# alias grepp='grep -P'                   # grep with perl syntax
alias grepp=pcregrep                         # PCRE-based grep variant
alias greppi='pcregrep -i --color=auto'      # color, case-insensitive pcregrep
alias grepps='pcregrep -F'                   # fixed string pcregrep
alias greppis='pcregrep -F'                  # fixed string pcregrep (case-insensitive)
alias greppc='pcregrep --color=always'       # color pcregrep for pipes
alias greppic='pcregrep -i --color=always'   # color pcregrep for pipes (case-insensitive)
alias greppn='pcregrep -Hn --color=always'   # pcregrep with filename and line no.
alias greppin='pcregrep -iHn --color=always' # pcregrep with filename and line no. (case-insensitive)
alias greppr='pcregrep -iHnr --color=always' # recursive pcregrep with filename and line no. (case-insens)
alias greppsys='sudo pcregrep -r -D skip'    # recursive pcregrep with sudo, skip device files
alias greppm='pcregrep -M --color=auto'      # color multiline pcregrep
alias greppmi='pcregrep -iM --color=auto'    # color, case-insensitive multiline pcregrep
alias greppnot='pcregrep -v'
alias greppo='pcregrep -o'                   # only output matching substring
grepcb() {
    { if [[ "$#" == 1 || "$1" == - ]]; then cat | pcregrep -o "$1";
      else cat "$2" | pcregrep -o "$1";
      fi } | tee >(xsel -b);
};
alias sudb='sudo updatedb'
alias locater='locate --regex'   # locate extended regex
alias locatea='locate -A'        # locate files matching ALL patterns
alias locatei='locate -i'        # locate files ignoring case`
alias findfilename='find . -type f -iname'   # find files with (case-insens) name PATTERN.
alias findinwd='find . -maxdepth 1'      # find in current directory (non-recursive)
alias findfileinwd='find . -maxdepth 1 -type f'      # find in current directory (non-recursive)
# alias findrepl='printf ">> "; while read line; do find . -iname "*$line*"; printf ">> "; done'
findrepl() {
    printf ">> ";
    while read line; do
        ( for dir in "${@-.}"; do
              find `realpath "$dir"` -iname "*$line*";
          done ) | less;
        printf ">> ";
    done
}
alias findreplcs='findrepl ~/ebooks/coding ~/ebooks/cs ~/ebooks/dl'
findiname() {
    find "$1" -iname "*$2*" | less -FX;
    # TODO: generalize findiname, remove findiname2
    # findiname2 DIR1 DIR2 PARTIALNAME
}
findfileiname() {
    find "$1" -type f -iname "*$2*" | less -FX;
}
findiname2() {
    find "$1" "$2" -iname "*$3*" | less -FX;
}
findfileiname2() {
    find "$1" "$2" -type f -iname "*$3*" | less -FX;
}
findiregex() {
    find "$1" -regextype egrep -iregex ".*$2.*" | less -FX;
}
findiregex2() {
    find "$1" "$2" -regextype egrep -iregex ".*$3.*" | less -FX;
}
alias sffind='findiname ~/ebooks/fiction/sf-fantasy'
alias sffindfile='findfileiname ~/ebooks/fiction/sf-fantasy'
alias sffindre='findiregex ~/ebooks/fiction/sf-fantasy'
alias comicsfind='findiname ~/Documents/Comics'
alias comicsfindfile='findfileiname ~/Documents/Comics'
alias comicsfindre='findiregex ~/Documents/Comics'
alias csfind='findiname2 ~/ebooks/coding ~/ebooks/cs'
alias csfindfile='findfileiname2 ~/ebooks/coding ~/ebooks/cs'
alias csfindre='findiregex2 ~/ebooks/coding ~/ebooks/cs'
alias statf='stat --printf'    # eg. statf "%s" file (size in B), statf "%h" file (no. hard links)
alias rgg='rg -pS'             # ripgrep with pretty and smartcase
alias rgh='rg -pS --hidden'    # ripgrep with pretty and smartcase, include dotfiles

# -----------------------
# HTML & XML MANIPULATION
# -----------------------
alias htmlcat=htmldoc
alias makelinks='make-links'    # ~/.scripts/make-links
alias makelinks-dirtree-flatten='find . -type f -exec printf "<a href={}>{}</a><br>\n"  \;'
alias href-relativize="sed -e 's/href=\"http:\/\/[^ \"]*\//href=\"/g'"
alias dehtent="perl -n -mHTML::Entities -e ' ; print HTML::Entities::decode_entities(\$_) ;'"
alias htent="perl -n -mHTML::Entities -e ' ; print HTML::Entities::encode_entities(\$_) ;'"
alias htmlentdecode="recode -f html..ascii"    # force conversion even if not reversible
alias remove-wayback-insert="sed -i '/BEGIN WAYBACK TOOLBAR INSERT/,/END WAYBACK TOOLBAR INSERT/d'"
alias xstar=xmlstarlet
alias xq=xqilla
alias delete-before-doctype="sed -i -ne '/<!DOCTYPE/,$ p'"
alias urlenc='xargs -0 urlencode'
alias urldeenc='xargs -0 urlencode -d'    # use urldecjs for bookmarklets
alias urldecjs='sed "s/+/%2B/g" | xargs -0 urlencode -d'   # url-decode bookmarklet js
alias urldecjscb='cb | sed "s/+/%2B/g" | xargs -0 urlencode -d'
alias htmlxpath='xmllint --html --xpath'

#------------------------
# WGET & RELATED ALIASES.
#------------------------
# multiple hosts: use -H; restrict domains with -D dom1.com,dom2.org
alias wgetm='wget -nH -kKpN -rl inf -np --no-remove-listing'
alias wgetmh='wget -H -kKpN -rl inf -np --no-remove-listing'
alias wgetmcont='wgetm -c'    # continue, changed/new files only
alias wgetmnc='wgetm -c -nc'   # continue, new files only
alias wgetmf="wgetm --reject-regex '.*[?$].*'"  # filter out URLs with params
# wgetm-incdirs: eg. wgetmincdirs /Tools,/Utilities domainname.com/Tools/index.html
alias wgetm-incdirs='wget -nH -kKpN -rl inf --no-remove-listing --include-directories'
alias wgetmf-incdirs="wgetm-incdirs --reject-regex '.*[?].*'"
alias wgetmff-incdirs="wgetm-incdirs --reject-regex '.*[?$].*'"
alias wgetm-incdirs-span='wget -H -kKpN -rl inf --no-remove-listing --include-directories'
alias wgetm-conv='wgetm -E'          # wgetm w. adjust-extension (-E)
alias wgetmf-conv='wgetmf -E'        # wgetmf w. adjust-extension (-E)
alias wgetmlimit='wget -kKpEN -np -nH -rl'  #eg wgetmlimit 2... (2 recurs lvls)
alias wgetmcut='wgetm --cut-dirs'  #eg wgetmcut 2 ... (removes root + top 2 subdirs)
alias wgetmfcut="wgetmf --reject-regex '.*[?].*' ---cut-dirs"  #eg wgetmcut 2 ... (removes root + top 2 subdirs)
alias wgetmffcut="wgetmff --reject-regex '.*[?$].*' ---cut-dirs"  #eg wgetmcut 2 ... (removes root + top 2 subdirs)
alias wgetmflat='wgetm -nd'
alias wgetstealth='wget -e robots=off -U=Mozilla'
alias wgetmstealth='wgetm -e robots=off -U="Mozilla" -w 1'
alias wgetmfstealth='wgetmf -e robots=off -U="Mozilla" -w 1'
alias wget1='wget -kKpEHN -rl 1'
alias wget1stealthconv='wget -kKpEHN -rl 1 -e robots=off -U=Mozilla -w 1'
alias wget1flatstealthconv='wget -kKpEHN -nd -rl 1 -e robots=off -U=Mozilla -w 1'
alias wgetp='wget -kKpEN'    # get page & prerequisites (same host only)
alias wgetpp='wget -kKpEHN'   # get page & prerequisites (span hosts)
alias wgetpcut='wget -kKpEN -nH --cut-dirs'
alias wgetcat='wget -pE -O' # usage: wgetcat <filename> <filename> ... <url> #UNTESTED
alias wgetm-cjk='wget -nH -kKpN -rl inf -np --no-remove-listing --restrict-file-names=nocontrol'
alias wgetmh-cjk='wget -H -kKpN -rl inf -np --no-remove-listing --restrict-file-names=nocontrol'
alias wgetmf-cjk="wgetm --reject-regex '.*[?$].*' --restrict-file-names=nocontrol"  # no param URLs
alias wgetm-incdirs-cjk='wget -nH -mkKp --include-directories --restrict-file-names=nocontrol'
alias wgetmff-incdirs-cjk="wget -nH -mkKp --reject-regex '.*[?$].*' --restrict-file-names=nocontrol --include-directories"
alias listhttplinks='xargs elinks --dump | grep "http" | sed "s/.*http/http/g"' # Waits for url from stdin then lists http links on page. echo url | listhttplinks. Pipe to wget.
alias listhttplinks2='xargs wget -O - 2>&1 | grep -i "http:" | sed "s/^.*http/http/\" | cut -d"\"" -f1 | sort -u'
# alias cbdl (clipboard aliases)

# -----------------
# DOWNLOAD ALIASES.
# -----------------
# ===== download/install software =====
alias dl-noice='git clone http://git.2f30.org/noice/'
alias install-noice='dl-noice; cd noice; make; cp noice /opt/bin/'
# https://calibre-ebook.com/download_linux
alias install-calibre='sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.py | sudo python -c "import sys; main=lambda:sys.stderr.write('"'"'Download failed\n'"'"'); exec(sys.stdin.read()); main()"'
alias install-youtube-dl='sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl;sudo chmod a+rx /usr/local/bin/youtube-dl'
# alias install-vimpager='(cd /opt && if [[ -d vimpager ]]; then rm -rI vimpager && git clone git://github.com/rkitover/vimpager && cd vimpager && sudo make install)'
alias install-vimpager-deb='(cd /opt && if [[ -d vimpager ]]; then rm -rI vimpager; fi && git clone git://github.com/rkitover/vimpager && cd vimpager && sudo make install-deb)'
alias install-qarma='(git clone https://github.com/luebking/qarma.git && cd qarma/qarma-zenity && qmake .. && make && install qarma /opt/bin || return 1)'
alias install-tq='pip3 install https://github.com/plainas/tq/zipball/stable'  # select html by css selector
alias oh-my-zsh-install-zsh-syntax-highlighting='git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting; echo "Add to plugins list in .zshrc and re-source."'
alias install-perlbrew='\curl -L https://install.perlbrew.pl | bash'
alias install-pyenv='git clone https://github.com/yyuu/pyenv.git ~/.pyenv; git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv; echo "see github.com/yyuu/pyenv & github.com/yyuu/pyenv-virtualenv"'
alias install-hy-here='mkdir hy; cd hy; pyvenv env; pip install git+https://github.com/hylang/hy.git'
alias install-ocamlbrew='curl -kL https://raw.github.com/hcarty/ocamlbrew/master/ocamlbrew-install | bash'
alias install-ocamlbrew-track='tail -f /tmp/ocamlbrew.*'
alias install-opam='wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh -O - | sh -s /usr/local/bin'
alias install-hs-stack-1404='sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 575159689BEFB442; echo "deb http://download.fpcomplete.com/ubuntu trusty main"|sudo tee /etc/apt/sources.list.d/fpco.list; sudo apt-get update && sudo apt-get install stack -y'
alias install-hs-stack-1604='sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 575159689BEFB442; echo "deb http://download.fpcomplete.com/ubuntu xenial main"|sudo tee /etc/apt/sources.list.d/fpco.list; sudo apt-get update && sudo apt-get install stack -y'
alias   install-rust='curl https://static.rust-lang.org/rustup.sh -sSf | sh'
alias uninstall-rust='curl https://static.rust-lang.org/rustup.sh -sSf | sh -s -- --uninstall'
alias install-android-studio-32bit-prerequisites='sudo apt-get install libc6:i386 libstdc++6:i386 zlib1g:i386'
alias install-kf5-krusader-prerequisites="sudo apt-get-install plasma-workspace libc6 libgcc1 libqt5dbus5 libqt5xml5 libqtcore4 libqt5gui5 libqt5widgets5 libqt5printsupport5 libstdc++6 arj zlib1g ark bzip2 cpio kate kmail kdiff3 kompare xxdiff konsole krename lhasa md5deep cfv p7zip rpm unace unrar unrar-free rar unzip zip build-essential libkf5parts-dev libkf5wallet-dev cmake libkf5xmlgui-dev extra-cmake-modules kdoctools-dev qt5-default plasma-framework-dev"
alias install-wine='sudo apt-get install wine winbind playonlinux'
alias nvm-copy-global='nodebindir=`which node`; nodedir=${nodebindir%/bin/node}; chmod -R 755 $nodedir/bin/*; sudo cp -r $nodedir/{bin,lib,share} /usr/local/'
alias install-slop-prerequisites='sudo apt-get install cmake gengetopt libgl1-mesa-dev libglew-dev libglm-dev libimlib2-dev libxext-dev libxrandr-dev libxrender-dev'
install-peco() {
    tmpdir=`mktemp -d`;
    cd $tmpdir;
    github-latest-release -d peco peco
    ( file * | grep -P '\bgzip\b' > /dev/null ) && tar xf * ;
    ( file * | grep -P '\bzip\b' > /dev/null )  && unzip * ;
    mv peco*/peco /opt/bin/;
    mv peco*/README.md /opt/doc/peco-README.md;
}
install-buku() {
    PARSED=$(getopt -n "$0" -o sd --long "sudo,deb"  -- "$@")
    if [ $? -ne 0 ]; then echo "getopt error"; exit 1; fi
    eval set -- "$PARSED"
    while true; do
        case "$1" in
            -h|--help) cat <<EOF
install-buku [-s][-d]
    Options:
        -s --sudo    use sudo with pip3 install
        -d --deb     use .deb package
EOF
                       shift; ;;
            -s|--sudo) use_sudo="true";
                       shift; ;;
            -d|--deb)  deb="true";
                       shift; ;;
            --) shift; break; ;;
            *) echo "unrecognized option: $1"; return 1; ;;
        esac
    done
    if [[ -n $use_sudo ]]; then
        sudo pip3 install urllib3 cryptography beautifulsoup4 requests;
    else
        pip3 install urllib3 cryptography beautifulsoup4 requests
    fi;
    (
        cd /opt;
        if [[ -n $deb ]]; then
            mkdir -p deb; cd deb/;
            github-latest-release -d jarun Buku 'deb';
            sudo dpkg -i buku*.deb;
        else
            git clone https://github.com/jarun/Buku.git;
            cd Buku;
            sudo make install;
        fi
    )
}
install-oil() {
    sudo apt-get install jq
    sudo apt-get install xsel
    install-peco
    (
        cd /opt;
        git clone https://github.com/AndreiUlmeyda/oil.git;
        cd oil;
        sudo make install;
    )
    echo "note: oil requires awk and jq be available in /bin/."
    echo "Create symlinks or edit the shebang lines in the scripts in oil/src/."
}
install-nvm () {
    export NVM_DIR="$HOME/.nvm" && (
        git clone https://github.com/creationix/nvm.git "$NVM_DIR";
        cd "$NVM_DIR";
        git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin`;
    ) && source "$NVM_DIR/nvm.sh";
}
upgrade-nvm () {
    (
        cd "$NVM_DIR";
        git fetch origin;
        git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" origin`;
    ) && source "$NVM_DIR/nvm.sh";
}
alias install-json-tools='for pkg in json underscore-cli prettyjson jsonlint; do npm install -g $pkg; done'
alias install-vim-plug='curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
alias install-pathogen='mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim'
alias install-dein='mkdir ~/.vim/dein; ( cd ~/.vim/dein/; curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh && sh installer.sh . && echo "run vim and execute :call dein#install()")'
alias install-lein='cd `mktemp -d`; wget https://raw.github.com/technomancy/leiningen/stable/bin/lein; chmod a+x lein; sudo mv lein /opt/scripts/; cd -'
# SCALA REPL
alias install-ammonite='sudo curl -L -o /usr/local/bin/amm https://git.io/vdNv2 && sudo chmod +x /usr/local/bin/amm && amm'
alias install-duktape='git clone https://github.com/svaarala/duktape.git;cd duktape;make dist;cd dist;make -f Makefile.sharedlibrary;sudo make -f Makefile.sharedlibrary install;make -f Makefile.cmdline;sudo ln -s `pwd`/duk /usr/local/bin/duk'
# ===== other download aliases =====
alias ytdl='youtube-dl -ci --all-subs --xattrs -o "%(title)s-%(id)s.%(ext)s"'
alias ytdl_enus='youtube-dl -ci --write-sub --sub-format ass/srt/best --sub-lang enUS --xattrs -o "%(title)s-%(id)s.%(ext)s"'
alias ytdlsubs='youtube-dl -t --all-subs --skip-download'
alias cbytdl='cb|tacn|dolines ytdl_enus "$x"; done'
alias cbytdl_480p='cb|tacn|dolines ytdl_480p "$x"; done'    # .sh-functions-media
alias imgurdl='python3 /opt/imgur-album-downloader/imguralbum.py'    # github.com/alexgisby/imgur-album-downloader
alias packt=packtdlallformats
alias packtdlepub='python /opt/packtpub-crawler/script/spider.py --config config/prod.cfg --type epub'
alias packtdlpdf='python /opt/packtpub-crawler/script/spider.py --config config/prod.cfg --type pdf'
alias packtdlallformats='python /opt/packtpub-crawler/script/spider.py --config config/prod.cfg --extras --all'
alias packtdl_from_here='python script/spider.py --config config/prod.cfg --extras --type epub'
alias packtdlformat='python /opt/packtpub-crawler/script/spider.py --config config/prod.cfg --type'
alias packtdlextras='python /opt/packtpub-crawler/script/spider.py --config config/prod.cfg --extras'
alias packtclaim='python /opt/packtpub-crawler/script/spider.py -c config/prod.cfg --notify gmail --claimOnly'
alias packtdlall='python /opt/Packt-Publishing-Free-Learning/packtPublishingFreeEbook.py -da'   # dl all books (in formats given in Packt-Publishing-Free-Learning/configFile.cfg)
alias packtdlchosen='python /opt/Packt-Publishing-Free-Learning/packtPublishingFreeEbook.py -dc'  # dl books listed in Packt-Publishing-Free-Learning/configFile.cfg

# ----------------
# FIREFOX ALIASES.
# ----------------
alias firefox=/opt/firefox/firefox
alias ff='firefox --new-tab'
alias ffw='firefox --new-window'
alias ffp='firefox --new-instance -P'
alias ffpm='firefox --ProfileManager'
FFMAINPROFILE=default
alias ffd="firefox -P $FFMAINPROFILE"
alias ffmain="firefox -P $FFMAINPROFILE"
alias ffsearch="firefox -search"
# note: when using `...` in alias, use single quotes so the backquotes are evaluated when the
#       alias is *called*, rather than when the alias definition is read.
alias cdffdir='cd "$(ffprof $FFMAINPROFILE)"'    # cd to Firefox profile directory
alias cdffcache='cd "$(fftempfiles $FFMAINPROFILE)"'  # cd to Firefox cache directory
WFMAINPROFILE=default

alias ffprefs='echo $(ffprof)/prefs.js'
alias ffpipe='base64 -w0 <&0 | read -r x; firefox "data:text/html;base64,$x"'
alias ffalltabs='cat ~/.mozilla/firefox/*.default/sessionstore-backups/recovery.js | jq ".windows[].tabs[].entries[].url"'
alias ffcurrenttabno='cat ~/.mozilla/firefox/*.default/sessionstore-backups/recovery.js | jq ".windows[0].selected"'
alias cdpmdir='cd "$(pmprof)"'    # cd to Firefox profile directory
alias cdpmcache='cd "$(pmtempfiles)"'  # cd to Firefox cache directory
alias pmalltabs='jq ".windows[].tabs[].entries[].url" ~/.moonchild\ productions/pale\ moon/*.default/sessionstore.js'
alias pmcurrenttabno='jq ".windows[0].selected" ~/.moonchild\ productions/pale\ moon/*.default/sessionstore.js'
alias cdwfdir='cd "$(wfprof)"'    # cd to Firefox profile directory
alias cdwfcache='cd "$(wftempfiles)"'  # cd to Firefox cache directory
alias wfprefs='echo $(wfprof)/prefs.js'
alias wfpipe='base64 -w0 <&0 | read -r x; waterfox "data:text/html;base64,$x"'
alias wfalltabs='cat $(wfprof)/sessionstore-backups/recovery.js | jq ".windows[].tabs[].entries[].url"'
alias wfcurrenttabno='cat $(wfprof)/sessionstore-backups/recovery.js | jq ".windows[0].selected"'
alias mozrepl='rlwrap telnet localhost 4242'
alias mozreplcurrenttab="echo 'repl.look()'|nc localhost 4242|grep -oP '(?<=this.gLastValidURLStr=).*'"

#------------------------
# BROWSER/SERVER ALIASES.
#------------------------
alias archm='sudo archmage -p'    # eg. archm 81 myfile.chm
alias pydirserve='python2 -m SimpleHTTPServer'  # serve current dir tree on port 8000
# alias pydirserve='python3 -m http.server'  # serve current dir tree on port 8000
alias dirserve=http-server   # serve current dir tree (or ./public) on port 8080 (or set with -p)
alias lsportprocs='lsof -i'  # list processes on given port [range], eg. lsportprocs TCP:8081
alias lynx='lynx -vikeys -cfg=~/.lynx.cfg'
alias chrome-minimal='google-chrome --profile-directory="Profile 1"'
alias cvimserver='$HOME/.cvimrc/cvim_server.py'
alias cdchrometempdir='cd "`chrometempfiles Default`"'  # cd to Google Chrome temp directory
alias cdchromedir='cd "`chromeprof Default`"'  # cd to Google Chrome profile directory
alias chromerepl='/opt/google/chrome/chrome --headless --repl'  # requires path to actual binary
alias slimerjswf='SLIMERJSLAUNCHER=/opt/waterfox/waterfox ~/node_modules/.bin/slimerjs'
alias slimerjswfheadless='SLIMERJSLAUNCHER=/opt/waterfox/waterfox ~/node_modules/.bin/slimerjs --headless'

#--------------------
# NETWORKING ALIASES.
#--------------------
alias tracert=traceroute
alias ports='netstat -tunp'
# from: http://unix.stackexchange.com/questions/22615/
alias ip-addr="lwp-request -o text checkip.dyndns.org | awk '{ print $NF }'"
alias htheaders='lynx -dump -head'
alias lstcpservers='sudo netstat -plentv'
alias monitor-http-requests="sudo tcpdump -i eth0 -A -s 5000 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'"
alias get-mtu='ifconfig | grep -i mtu'

# -------------
# HELP ALIASES.
# -------------
# currently problem with man -H: use manh function (works via man2html)
# alias manht='man -Hfirefox'   # problem with grohtml images
# alias manht='man -Hchromium-browser'   # problem with grohtml images
alias gitman='git help'
alias erlman='erl -man'
alias bashman='mangrep --bash'   # see .sh-functions. eg. bashman type
alias zman='mangrep -s --zsh'    # see .sh-functions. eg. bashman type
alias coreinf='info coreutils'   # eg.  coreinf 'env'
# alias mans='man -k . | grep'  # use whatis -r (or -w) instead
alias what='whatis -w'   # one-line man descriptions, wildcard search
alias whatr='whatis -r'   # one-line man descriptions, regex search
alias whichman='man -a --where --where-cat'
alias github-readme-to-man='pandoc -s -f markdown_github -t man'
git-grepconfig() { grep -iP "$1" ~/.gitconfig; }

#-------------------
# OPEN & SU ALIASES.
#-------------------
alias x=xdg-open
alias xrun=xdg-open
alias grun=gnome-open
alias krun=kde-open
alias ksu=kdesudo

#-------------------
# CLIPBOARD ALIASES.
#-------------------
# xsel or xclip copies stdin to selection
# for i in `seq 5`; do echo $(cb); done   # prints clipboard 5x
# ...|cb will pipe to clipboard and print previous contents
# ...|2cb will pipe to clipboard without output
alias cb='xsel -b'                                       #  prints clipboard; ...|cb  # pipe into clipboard
alias 2cb='xsel -ib >/dev/null'                          #  uptime|2cb   # uptime to clipboard (no output)
# alias sel='xsel -op'  #  prints selection; ...|sel     # pipes input into selection
# alias 2sel='xsel -ip >/dev/null'  #  uptime|2cb        # uptime to selection (no output)
alias q=copyq
alias cbnth='copyq read'                                 # print nth clipboard item (0-indexed)
alias qn='copyq tab "&notes" add'                        # add to copyq notes tab
alias qsn='copyq tab "&snippets" add'                    # add to copyq snippets tab
alias cbdl='(cb; echo "") | dolines wget "$x"; done'     # download a list of file urls from clipboard
alias cbdlp='(cb; echo "") | dolines wget -p "$x"; done' # download a list of file urls with page requisites from clipboard
alias cbcp='xsel -b >'                                   # copy data from clipboard to file
alias cbdo='cb | dolines'                                # process each line in clipboard text
alias cbdor='cb | tacn | dolines'                        # process each line in clipboard text (reverse order)
cbappend () {
    if [[ "$1" =~ ^-h$\|^--help$ ]]; then
        cat <<EOF
cbappend [-s SEPARATOR] FILE
    Append clipboard contents to FILE.

    Options:
      -s --separator   specify a separator printed after the item
EOF
        return 0; fi;
    sep="";
    # ----- options -----
    while [[ $# -gt 1 ]]; do
        case "$1" in
            (-d | -s | --separator | --delimiter)
                sep="$2"
                shift 2 ;;
            (*) echo "unrecognized option: $1"
                return 1 ;;
        esac
    done
    # --- end options ---
    printf "$(xsel -b)$sep" >> "$1";
}
alias cbcpf='cp $(xsel -b)'    # copy file from clipboard


#---------------
# SHELL ALIASES.
#---------------
alias vi-bindings='set -o vi'
alias emacs-bindings='set -o emacs'
alias runfromhere='export PATH="./:$PATH"'
alias typa='type -a'
alias typp='type -p'
alias \?='echo'
alias \?\?='help'
alias lssetopt='set -o | grep "on$"'
alias testprogexists='>/dev/null 2>&1 command -v'
alias g='dolphin "`pwd`"'    # note: oh-my-zsh git plugin will overwrite this with g=git
alias lastcommand='fc -ln -1 -1'
alias copycommand='fc -ln -1 -1 | cb'
alias plainbash='bash --noprofile --norc'
alias plainzsh='zsh -f --no-rcs'
alias dirsh='$SHELL -c "source .dir.sh"'
alias hr="jot -s '' -b '━' `tput cols`"

# ============
# CRON ALIASES
# ============
alias crontab-save='crontab-l > ~/.crontab'
alias crontab-load='crontab ~/.crontab'
alias crontab-edit='vim ~/.crontab'
alias crontab-edit-load='vim ~/.crontab && crontab ~/.crontab'
alias root-crontab-save='sudo crontab -l > /root/.crontab'
alias root-crontab-load='sudo crontab /root/.crontab'
alias root-crontab-edit='sudo vim /root/.crontab'
alias root-crontab-edit-load='sudo vim /root/.crontab && sudo crontab ~/.crontab'
alias system-crontab-edit='sudo vim /etc/crontab'

# ---------------
# PROCESS ALIASES
# ---------------
alias t=htop
alias psall='ps aux'
alias psgrep='ps aux | grep'
alias psname2pid='ps -o pid= -C'  # equivalent to pgrep
alias psbyname='ps -C'
alias psname2args='ps -o args= -C'
alias pspid2name='ps -o comm= -p'
alias psbypid='ps -p'
alias psbyparent='ps --ppid'
alias myprocs='ps uxf'
alias myprocsbymem='ps -u $USER -O pid,user,s,tty,%mem,comm,start,cputime --sort -%mem'
alias pkill9='pkill -9'
alias kill9='kill -9'
alias die='killall -vs9'
alias lsofu='lsof -a -u troy'         # list files for user troy
alias lsofp='lsof -a -p'              # list files for PID
alias wof='lsof -r 2'                 # watch files
alias wofu='lsof -r 2 -a -u troy'     # watch files for user troy
alias wofp='lsof -r 2 -a -p'          # watch files for PID
alias pk='pkill -9'
alias pidtoname='ps -o comm= -p'


#-----------------------
# COLOUR PICKER ALIASES.
#-----------------------
alias eyed=gpick
alias grabhexcol='grabc 2>/dev/null'
alias grabrgbcol='grabc 1>/dev/null'
alias colpick='grabc 2>/dev/null | xsel -ib; xsel -ob'
alias colpickrgb='grabc 1>/dev/null | xsel -ib; xsel -ob 1>/dev/null'

#-------------------
# CUT & PASTE FILES.
#-------------------
alias cf=xclip-copyfile
alias xf=xclip-cutfile
alias pf=xclip-pastefile

# --------------
# PAGER ALIASES.
# --------------
alias vip=vimpager
alias wvip='PAGER=vimpager'
alias vpman='MANPAGER=vimpager man'
vman() { man "$@" | less.sh; }
alias less='less -isMW -j5'    # smart-case, squeeze blank, hilite unread, l prompt, jump target: l5
# follow appended data (like tail -f) in less
alias fless='less +F'
alias vless=/usr/share/vim/vim74/macros/less.sh
alias vless_='vim -u /usr/share/vim/vim74/macros/less.vim'
alias vmore='vim -u $HOME/.vim/vimrc.more'
alias cless="LESSOPEN='|~/.lessfilter %s' less -R"
alias cless_sh="LESSOPEN='| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
alias lesr='less -R'   # raw ANSI color escapes
alias lesrr='less -r'  # raw control chars
alias lessprint='less -X'  # no termcap init/deinit - prevents deinit clearing screen after less
alias lless='less +G'  # start at end of file
docview() { pandoc "$1" | \lynx -vikeys -stdin; }

# =============
# MOZC ALIASES.
# =============
alias mozc-config='/usr/lib/mozc/mozc_tool --mode=config_dialog'
alias mozc-dictionary='/usr/lib/mozc/mozc_tool --mode=dictionary_tool'
alias mozc-word-register='/usr/lib/mozc/mozc_tool --mode=word_register_dialog'
alias mozc-handwriting='/usr/lib/mozc/mozc_tool --mode=hand_writing'
alias mozc-character-palette='/usr/lib/mozc/mozc_tool --mode=character_palette'

# ===================
# DICTIONARY ALIASES.
# ===================
alias gcide='dict -d gcide'
alias dictwn='dict -d wn'
alias moby='dict -d moby-thesaurus'
alias websters='view ~/ebooks/reference/websters-1913.txt'

#-----------------
# ARCHIVE ALIASES.
#-----------------
alias untargz='tar xzvf'
alias untarbz2='tar xjvf'
alias untar='tar xaf'    # unarchive - multiple formats  # use unar instead
alias lstar='tar taf'    # list contents - multiple formats
alias 7zip='7z a -tzip'  # 7zip myarchive.zip myarchive/
# tgz [name [files]]    make .tgz out of files
# unar unarchive multiple formats
alias cbr2cbzall='for * in ./*.cbr; do cbr2cbz "$x"; done'    # cbr2cbz in ~/.scripts

# -----------
# SSH ALIASES
# -----------
alias sshgen="ssh-keygen -t rsa -b 4096 -C $my_email"
alias ssh-choose-key='find ~/.ssh -type 'f' | grep -v '.pub$' | iselect -ma'
alias ssh-agent-start='eval "$(ssh-agent -s)"'
alias ssh-addkey='ssh-add `ssh-choose-key`'

#------------------
# SETTINGS ALIASES.
#------------------
alias pralias='cat $SH_ALIAS_FILE'
alias search-my-commands='print-my-commands 2>/dev/null | grep -i'
alias smc=search-my-commands
alias editalias='${EDITOR:-vim} $SH_ALIAS_FILE; source $SH_ALIAS_FILE'
alias xres='xrdb ~/.Xresources'
alias lspath='echo $PATH|tr ":" "\n"'
alias install-desktop-files='xdg-desktop-menu install --novendor'
alias install-desktop-files-strict='xdg-desktop-menu install'
alias install-local-desktop-files='for f in ~/.local/share/applications/*.desktop; do xdg-desktop-menu install --novendor $f; done'
alias xdmenu='xdg-desktop-menu  install --novendor'
alias xdmenustrict='xdg-desktop-menu install'
alias xdmenurefresh='for f in ~/.local/share/applications/*.desktop; do xdg-desktop-menu install --novendor $f; done'
alias mimetype='xdg-mime query filetype'
alias mimeapp='xdg-mime query default'
mimeapp-for-file() { mimeapp $(mimetype "$1"); }
alias mimelist='cat /usr/share/mime/types'
alias mimegrep='cat /usr/share/mime/types | grep -i'
alias mimedefault='xdg-mime default'
alias update-mime-db-local='update-mime-database ~/.local/share/mime'
alias font-path="xset q | grep -A1 'Font Path' | tail -n1"
alias update-fonts='fc-cache -vf ~/.fonts/'
alias choose-input-method='im-config -c'
alias cron_logfile_on="sudo sed -ir 's/^#(cron\.\*)/\1/' /etc/rsyslog.d/50-default.conf" # log to /var/log/cron.log
alias lsxkb='cat /usr/share/X11/xkb/rules/base.lst'
alias lsxkbmodels="sed '/^! model$/,/^ *$/!d;//d' /usr/share/X11/xkb/rules/base.lst"
alias lsxkblayouts="sed '/^! layout$/,/^ *$/!d;//d' /usr/share/X11/xkb/rules/base.lst"
alias lsxkbvariants="sed '/^! variant$/,/^ *$/!d;//d' /usr/share/X11/xkb/rules/base.lst"
alias lsxkboptions="sed '/^! option$/,/^ *$/!d;//d' /usr/share/X11/xkb/rules/base.lst"
alias viewxkb="less -M '+/^\s*\!\s\w+$' /usr/share/X11/xkb/rules/base.lst"
alias viewxkbmodels="lsxkbmodels | less -M"
alias viewxkblayouts="lsxkblayouts | less -M"
alias viewxkbvariants="lsxkbvariants | less -M"
alias viewxkboptions="lsxkboptions | less -M"
alias gtk-emacs-bindings-copy-global='cp -r /usr/share/themes/Emacs ~/.themes/'   # copy gtk2&3 Emacs themes to local themes folder
alias gtk2-get-key-theme='gconftool-2 --get /desktop/gnome/interface/gtk_key_theme'
alias gtk2-set-key-theme='gconftool-2 --type=string --set /desktop/gnome/interface/gtk_key_theme'
alias gtk3-get-key-theme='gsettings get org.gnome.desktop.interface gtk-key-theme'
alias gtk3-set-key-theme='gsettings set org.gnome.desktop.interface gtk-key-theme'
alias gtk3-cinnamon-get-key-theme='gsettings get org.cinnamon.desktop.interface gtk-key-theme'
alias gtk3-cinnamon-set-key-theme='gsettings set org.cinnamon.desktop.interface gtk-key-theme'

# =====COMPOSE KEY=====
lscomposefiles() {
    # all compose key files loaded
    sed -nr 's/^include "(.+)".*/\1/p' ~/.XCompose |
        sed -r 's|%L|/usr/share/X11/locale/en_US.UTF-8/Compose|' |
        sed -r "s|%H|$HOME|" |
        sed -r 's|%S|/usr/share/X11/locale|';
    echo '~/.XCompose';
}
# .XCompose and additional compose files included (not locale compose file)
alias lscomposefiles_extra='lscomposefiles|grep -v /usr/share/X11/locale/en_US.UTF-8/Compose'

alias lscompose='cat `lscomposefiles`'  # all compose key combinations
alias lscompose_extra='cat `lscomposefiles_extra`'  # extra compose key combinations
alias lscompose_default='cat /usr/share/X11/locale/en_US.UTF-8/Compose'
alias lsxcompose='cat ~/.XCompose'      # user compose key combinations
alias viewxcompose='lscompose | less'
alias viewcompose='lscompose | less'
alias viewcompose_extra='lscompose_extra | less'
alias viewcompose_default='lscompose_default | less'


# --------------------------
# SYSTEM / HARDWARE ALIASES.
# --------------------------
alias distro='cat /etc/lsb-release'
alias systeminfo='DISTRO=$(cat /etc/os-release|command grep PRETTY); DISTRO="${DISTRO#PRETTY_NAME=\"}"; printf "DISTRO: ${DISTRO%\"}\nARCH:   $(uname -i)\nKERNEL: $(uname -r)\nNODE:   $(uname -n)\n"'
alias inx='inxi -F -d -lpu -z'
alias xevkb="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
alias togglemute='pactl set-sink-mute 0 toggle'
alias preparesetleds='sudo chmod 666 /dev/console'
alias capslockon='sudo setleds -D +caps < /dev/console'  # turn off capslock if xset doesn't work. Requires chmod 666 /dev/console (otherwise su - must used rather than sudo)
alias capslockoff='capslockon; sudo setleds -D -caps < /dev/console' # see capslockon; sometimes you need to use capslockon first or the light won't clear.
alias hdd='df -hT'
alias hdd-info='sudo parted -l'
alias partitionlist='fdisk -l'
alias lvms='sudo pvs; echo; sudo vgs; echo; sudo lvs'
alias lstab='cat /etc/mtab'  # list mounted partitions / filesystems in fstab format
alias etab='sudo $(echo ${EDITOR:-vim}) /etc/fstab' # customize auto-mounted partitions / filesystems in fstab file
alias retab='sudo mount -a'  # mount all partitions in fstab
alias uuids='ls -al /dev/disk/by-uuid/'  # list /dev partitions with UUIDs
alias uuid='ls -al /dev/disk/by-uuid/ | grep'  # list a /dev partition with its UUID
alias blkid='sudo blkid'     # list mounted partitions
alias ssmart='sudo smartctl'  # hard drive testing
alias evdev='sudo evdev' # show keyboard codes
alias showkey='sudo showkey' # query/monitor input devices (eg. key codes)
alias disable-wd-headparking='sudo idle3ctl -d'
alias hw-list='sudo lshw -short'    # list hardware in compact format using lshw
alias hw-list2='hwinfo --short'    # list hardware in compact format using hwinfo
alias hw-page='sudo lshw -short | less'    # list hardware in compact format using lshw
alias hw-page2='hwinfo --short | less'    # list hardware in compact format using hwinfo
alias hw-listusb='lsusb'
alias hw-listpci='lspci'
alias hw-memusage='cat /proc/meminfo'
alias hw-cpuinfo='sudo dmidecode --type processor'
alias hw-coreinfo='cat /proc/cpuinfo'
alias hw-motherboardinfo='sudo dmidecode --type baseboard'
alias hw-motherboardinfo-short='for f in /sys/devices/virtual/dmi/id/board_{vendor,name,version}; do printf "${f##*/}\t"; cat "$f"; done'
alias hw-meminfo='sudo dmidecode --type memory'
alias hw-biosinfo='sudo dmidecode --type bios'
alias hw-connectorinfo='sudo dmidecode --type connector'
alias hw-memtotal='cat /proc/meminfo| grep MemTotal'
alias hw-memsummary='top -b -n1 | grep Mem'
alias mimetypes2mailcap='< /etc/mime.types cut -f1 | grep -E "^[^#]" | dolines echo "$x; xdg-open '%s'"; done'   # save to ~/.mailcap
alias mousecodes='xev | grep button'
alias volume='amixer set playback Master'
alias volup='amixer set Master playback 5%+'
alias voldown='amixer set Master playback 5%-'
alias volmax='amixer set Master playback 100%'
alias volmute='amixer -D pulse set Master playback mute'
alias volunmute='amixer -D pulse set Master playback unmute'
alias voltoggle='amixer -D pulse set Master playback toggle'
alias alsareload='sudo alsa --force-reload'    # may fix no sound issue
alias kvm-ready-check="file /sbin/init | egrep -o '[0-9]+-bit'; printf 'CPU KVM support (0 means no support): '; egrep -c '(vmx|svm)' /proc/cpuinfo; kvm-ok"
alias lsof-noroot='lsof -u^root'
alias print-display-manager='cat /etc/X11/default-display-manager | xargs basename'
alias restartx="sudo restart `basename $(cat /etc/X11/default-display-manager)`"
# alias restartx="sudo systemctl restart `basename $(cat /etc/X11/default-display-manager)`.service"    # for systemd
alias has-virt-support="egrep -q 'vmx|svm' /proc/cpuinfo"
alias has-64bit-cpu='egrep -q lm /proc/cpuinfo'
alias has-64bit-kernel='[[ `uname -m` =~ 64 ]]'
alias xcape-restart="pkill -9 xcape; xcape -t 300 -e 'Control_L=Escape;Super_R=Menu' &"
alias kbreset='pkill -9 xcape; source ~/.sh-profile'
alias users-all='cut -d: -f1 /etc/passwd'
winid() {
    xwininfo -name "$1" | grep -oP "(?<=Window id: )0x[0-9a-f]+";
}
alias xwinprocid="xprop _NET_WM_PID | sed 's/.*= *//'"
alias lsgroups='getent groups'
alias lsusers='bash -c "compgen -u"'
alias dmesgless='dmesg --color=always | less -R'
alias printdatetime='date +"%a %d %b・%l:%M%P"'
alias lswindows='wmctrl -lpG'    # win-id, desktop# PID, x-off, y-off, w, h, machine-name, rest=title

# --------------
# SWITCH WINDOWS
# --------------
alias gotowaterfox='wmctrl -F -x -a Navigator.Waterfox'
alias gotoemacs='wmctrl -F -x -a emacs.Emacs'

# ----------------
# GIT/VCS ALIASES.
# ----------------
alias gitalias="git config --get-regexp '^alias\.' | cut -c 7- | sed 's/ /\t/' | column -s'	' -t"
alias gitsetupignore="git config --global core.excludesfile '~/.gitignore'"
alias gitcommits='git log --oneline --color | perl -ne '"'"'printf "HEAD~%-3d %s", ++$i, "$_"'"'"'| less -r'
alias cbclone='ghq get `xsel -ob`'
alias github-add-ssh='ssh-keyscan -t rsa github.com > ~/.ssh/known_hosts'
alias github-goto-first-commit='git log --reverse | head -n1 | cuts 2 | read commit; firefox `git config --get remote.origin.url | sed -r "s/git@(.*):(.*).git/http:\/\/\/\1\/\2/"`/commit/$commit'
alias github-markdown-preview=grip
github-get-issues() { http -a troyp -b "https://api.github.com/repos/$1/$2/issues?state=all" | json; }
alias github-wget-issues="wget -c -nH -kKpN -rl inf -np --no-remove-listing -e robots=off -U='Mozilla' -w 1 --accept-regex='.*/issues.*|.*/pull.*|.*/compare/.*' --reject-regex '.*[?$].*'"

# --------------------------------------
# SYNTAX HIGHLIGHTING & PRETTY PRINTING.
# --------------------------------------
alias colzl='pygmentize -f terminal256 -O style=native -l'  # syntax highlighting, eg. "cat file | colzl perl"
alias colorizelang='source-highlight -f esc -s'  # syntax highlighting, eg. "cat file | colorizelang perl"
alias colz='pygmentize -f terminal256 -O style=native -g'  # syntax highlighting (guess lang), eg. "cat file | colz"
# JS/JSON pretty printing:
alias ppjson='python -m json.tool'
alias ppjs='underscore print'   # js/json pretty printing (requires node module underscore-cli)
alias ppcjs='underscore print --outfmt pretty'  # js/json pretty printing & syntax highlighting
# also: prettyjson(pp/sh)

#-----------------------------
# EDITORS & PROGRAMMING TOOLS.
#-----------------------------
alias factorlang=/opt/factor/factor
alias jlangconsole=$JHOME/bin/jconsole    # since java console is also called jconsole
alias kona=/opt/kona/k
alias mzscheme='rlwrap /opt/racket/bin/mzscheme'
alias scheme48='rlwrap scheme48'
alias sml='rlwrap sml'
alias ocaml='rlwrap ocaml'
alias sbcl='rlwrap sbcl'
alias viminstall='cd ~/.vim/bundle; git clone'
# see http://nikhilism.com/post/2012/a-poor-mans-notational-velocity-on-linux/
alias nvv="gvim --remote-silent +':lcd %:p:h | :au FocusLost * :wa' \
'~/Dropbox/Notational Data' && wmctrl -a 'GVIM'"
alias extract_elisp='find . -name "*.el.gz" | xargs sudo gunzip'
alias core-on='ulimit -c unlimited'
alias core-off='ulimit -c 0'
alias cljload='java -jar ~/.clojure/clojure.jar'
alias fregec='java -Xss1m -jar /opt/frege/fregec.jar -d build'
alias fregerepl='/opt/frege-repl/gradlew --no-daemon --console plain :frege-repl-core:run'
alias java-setdefault='sudo update-alternatives --config java'
alias git-dir-is-dirty='[ `git diff --shortstat 2>>/dev/null | wc -l` != 0 ]'  # succeeds if dirty
# Package Managers: list installed packages
alias pkgs_npm='npm list'
alias pkgs_raco='tree -L 2 ~/.racket/planet/300/packages/'
alias pkgs_cpan='cpan -l'
alias pkgs_cabal='ls ~/.cabal/packages/hackage.haskell.org/'
alias pkgs_gem='gem list'
alias pkgs_npm='ls ~/.npm'
alias pkgs_pip='pip list'
# Package Managers: install
alias pipi='pip install --user'
alias pipi2='pip2 install --user'
alias pipi3='pip3 install --user'
alias pipreq='pip install --user -r requirements.txt'
alias pipreq2='pip2 install --user -r requirements.txt'
alias pipreq3='pip3 install --user -r requirements.txt'
alias spipi='sudo -H pip install'
alias spipi2='sudo -H pip2 install'
alias spipi3='sudo -H pip3 install'
alias spipreq='sudo -H pip install -r requirements.txt'
alias spipreq2='sudo -H pip2 install -r requirements.txt'
alias spipreq3='sudo -H pip3 install -r requirements.txt'
alias stacki='stack install'
alias cabali='cabal install'
alias opami='opam install'
alias gemi='gem install'
alias sgemi='sudo gem install'
alias npmi='npm install'
alias npmig='npm install -g'
alias yarni='yarn global add'
alias cargoi='cargo install'
alias boweri='bower install'
alias composerrg='composer global require'
alias notes='res=$(fzf < ~/dotfiles/notes-list.tsv | cut -f1); [[ -n $res ]] && echo "$res" | xargs bash -c '"'"'</dev/tty vim "$@"'"'"' xx'
# -------------------------------------------------------------------------------
# Jupyter
# install Jupyter + calysto_hy kernel in virtual env
alias install-jupyter='python3 -m venv jupyter; cd jupyter; source bin/activate; pip install wheel; pip install jupyter; pip install git+https://github.com/Calysto/calysto_hy.git'
# alias jupyter='cd /opt/jupyter; source bin/activate; bin/jupyter console'
alias iR='jupyter console --kernel=ir'
alias ijulia='jupyter console --kernel=julia-0.6'
# alias ihy='(cd /opt/jupyter; source bin/activate; jupyter console --kernel calysto_hy)'
alias ihy='jupyter console --kernel=calysto_hy'
alias iscala='jupyter console --kernel=scala'
# -------------------------------------------------------------------------------
# Python
alias pynote='ipython notebook --pylab=inline'
alias ipylab='ipython --pylab -i ~/.pylab'
alias ipy=ipylab
alias ipymath="ipython3 -i --pylab -c 'from math import *; from itertools import *; from functools import *; from operator import *;'"
alias ipy3='ipython3 --pylab'
pyc () { python2 -c "from math import *; from itertools import *; from functools import *; from operator import *; print($1)"; }

alias bpy='bpython'
alias mkenv3='python3 -m venv'
alias envactivate='source ./bin/activate'
startenv3 () { name="$1"; python3 -m venv "$name"; cd "$name"; source bin/activate; };
alias virtenv-activate='source ./bin/activate'
alias virtenv-deactivate=deactivate
alias pyenv-version="pyenv version | awk '{print $1}'"
alias py-lptrace='sudo python /opt/scripts/lptrace/lptrace.py -p'
alias pydb-lptrace='sudo python /opt/scripts/lptrace/lptrace.py -d -p'
# -------------------------------------------------------------------------------
# Perl
alias p='perl -pe'       # execute within loop, with print
alias pl=perl
alias ple='perl -e'        # execute perl code from next argument
alias pln='perl -ne'       # execute within loop
alias plnl='perl -nle'     # execute within loop, strip/add newlines
alias plp='perl -pe'       # execute within loop, with print
alias plpl='perl -lpe'     # execute within loop, with print, strip/add newlines
alias pli='perl -i.orig -e'       # execute perl code in-place on file(s)
alias plin='perl -i.orig -ne'     # execute perl code in-place on file(s), within loop
alias plip='perl -i.orig -pe'     # execute perl code in-place on file(s), with print
alias plinp='perl -i.orig -npe'   # execute perl code in-place on file(s), with print, within loop
alias plwe='perl -0777 -pe'         # execute perl code within loop, with print, slurp whole file
alias plwi='perl -0777 -i.orig -pe' # execute perl code in-place within loop, with print, slurp whole file
alias Pl='perl -E'      # perl (enable features)
alias perl-warnings-on="alias ple='perl -ew'; alias Ple='perl -wE'"
alias perl-warnings-off="alias ple='perl -e'; alias Ple='perl -E'"
alias perlEOF="perl -w <(cat <<'EOF'"    # multiline perl command: end with: EOF\n)
alias perlrepl='perl -de 0'
# adapted from instmodsh script
alias cpanlist="perl -MExtUtils::Installed -e '"'use vars qw($Inst @Modules);$Inst = ExtUtils::Installed->new();@Modules = $Inst->modules();print("Installed modules are:\n   ", join("\n   ", @Modules), "\n");'"'"
alias perltopics="perldoc -t perltoc | grep -oP '^  ([^ ]+)'"
alias pd='perldoc -t perltoc | grep -oP "^  ([^ ]+)" | peco | while read -r x || [[ -n $x ]]; do perldoc "$x"; done 2>/dev/null'
pds() { perldoc "$1"; perldoc -q "$1"; perldoc -f "$1"; perldoc -v "$1"; perldoc -a "$1"; };
alias perlmodules="perl -MFile::Find=find -MFile::Spec::Functions -Tlwe '"'find { wanted => sub { print canonpath $_ if /\.pm\z/ }, no_chdir => 1 }, @INC'"'"    # see perldoc perlmodlib
alias pdmod='perlmodules | peco | xa perldoc -F'
alias pdmodsrc='perlmodules | peco | xa perldoc -Fm'

# -------------------------------------------------------------------------------
# Ruby
alias rbe='ruby -e'       # execute ruby code from next argument
alias rbln='rble -n'      # execute within loop
alias rblp='rble -p'      # execute within loop, with print
alias rblnl='rble -nl'    # execute within loop, strip/add newlines
alias rblpl='rble -pl'    # execute within loop, with print, strip/add newlines
alias rbcol='ruby -rcolorize -e'    # eg rbcol 'puts "This is blue".colorize(:blue)'
alias riv='PAGER=vimpager ri'
alias ri='LESS="$LESS -r" ri --format ansi'
alias rii='ri -i'
# alias pry='PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin pry'   # avoid warnings about $PATH

# -------------------------------------------------------------------------------
alias phprepl='php --interactive'
alias xracket='racket -il xrepl'
alias rkt='racket -e "(require readline)" -i'
# the code to install scribble-emacs (from scribble docs) seems to be broken
alias update-scribble-mode='racket -e "(require (planet neil/scribble-emacs:1:2/install-in-my-emacs))"'
alias cppdecl=c++decl
alias pcgrep='pkg-config --list-all | grep -i'
alias pkgc='pkg-config --libs'
alias cpkgc='cmake --find-package -DLANGUAGE=C -DCOMPILER_ID=GNU -DMODE=COMPILE'   # eg. cpkgc -DNAME=LibXml2
alias pipu='sudo -H pip install --upgrade'
alias iconi='/opt/icon/bin/icon /opt/icon/pl/progs/qei.icn'  # REPL for Icon programming language

# --------------
# EMACS ALIASES.
# --------------
alias enw='emacs -nw'
alias e="emacsclient -ta ''"
alias eq='emacs -Q -nw'
alias eqw='emacs -Q'
alias ec="emacsclient -cna ''"
alias emc=emacsclient
# emacsclient: geometry option isn't working - why not?
alias eg="emacsclient -cna 'gvim' -F '((height . 43) (width . 97) (top . -63) (left . -35))'"
alias emint='pkill --signal SIGINT emacs'
alias epipe=$HOME/.scripts/emacsclient
# ===== CHOOSE EMACS CONFIG =====
# alias emacs-spacemacs-toggle='if [[ -d ~/.emacs.d.spacemacs ]]; then mv -T ~/.emacs.d ~/.emacs.d.plain; mv -T ~/.emacs.d.spacemacs ~/.emacs.d; echo "Spacemacs active"; else mv -T ~/.emacs.d ~/.emacs.d.spacemacs; mv -T ~/.emacs.d.plain ~/.emacs.d; echo "Plain Emacs active"; fi;'
# run from a directory containing an alternative .emacs.d directory
alias emacs-from-here='HOME=`realpath .` emacs'
# set main .emacs.d folder to point to a given config
alias emacs-set-config='( setopt nullglob; userdir=$(iselect -ma ~/.emacs.d.* ~/.emacs-*/.emacs.d); echo "~/.emacs.d -> $userdir"; ln -f -s -T "$userdir" ~/.emacs.d )'
alias emacs-choose-config='( setopt nullglob; iselect -ma ~/.emacs.d.* ~/.emacs-*/.emacs.d )'
alias emacschoose='HOME=`iselect -ma ~/.emacs-*/` emacs'

# -----------
# PDF ALIASES
# -----------
alias pdfdiff=diffpdf
alias pdfgrep='pdfgrep -nH'
alias pdfgrepi='pdfgrep -i'
alias pdfg='pdfgrep -nH'
alias pdfgi='pdfgrep -inH'
alias concatpdfs='gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=out.pdf' # joins pdfs (and bookmarks) in order
alias sej=sejda-console
alias pdfmergeall='sejda-console merge -f *.pdf -o out.pdf'
alias sejmerge='sejda-console merge' # eg. sejmerge -f file1.pdf file2.pdf -o newfile.pdf
# unlike pdfjoin, sejda-console merge preserves bookmarks
alias sejsplit='sejda-console splitbypages'
alias sejpptojpeg='sejda-console pdftojpeg'
alias sejpptotext='sejda-console extractpages'
alias sejtotext='sejda-console extracttext'
alias gs-pstopdf='gs -q -dBATCH -dAutoFilterColorImages=false -sColorImageFilter=FlateEncode -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=out.pdf'
alias jpdftweak='java -jar /opt/jar/jpdftweak/jpdftweak.jar'  # can renumber pages in PDFs (loses bmarks)
alias pdfimg='pdfimages -j'
# OCR: use pdfocr for OCR; much better than pdfsandwich (default settings)
alias pdfjoin-rotate='pdfjam --fitpaper true --rotateoversize true --suffix joined'
alias pdfjoin='pdfjam --fitpaper true --suffix joined'
alias pdf-box-bounding='gs -sDEVICE=bbox -f'    # give corners of outermost printed marks on ea page
alias pdf-box-pages='pdfinfo -box'    # give corners of pages
alias pdfcrop-briss='java -jar /opt/jar/briss-0.9/briss-0.9.jar'
alias pdfcrop-quench=pdf_quench
alias briss='java -jar /opt/jar/briss-0.9/briss-0.9.jar'
alias pdftotextl='pdftotext -layout'

# -------------
# IMAGE ALIASES
# -------------
alias img-inplace-mod-bright-sat-hue='mogrify -modulate'    # requires imagemagick. In place.
alias img-tograyscale='convert -colorspace Gray'
alias img-tobw='convert -monochrome'
alias img-tochannels='convert -separate'
alias img-avg='convert -average'
alias display_with_srgb='display -profile /usr/share/ghostscript/9.*/iccprofiles/srgb.icc'
alias display_whitebg='display -background white -flatten'
alias img-info=identify
img-geometry () { convert "$1" -print "%wx%h\n" /dev/null; }
alias imgview-trans='pqiv -c'

# -------------
# MEDIA ALIASES
# -------------
alias audioshowstreams='ffprobe -show_streams -select_streams a -loglevel error'
alias videoshowstreams='ffprobe -show_streams -loglevel error'

# -------------------
# FILE FORMAT ALIASES
# -------------------
alias rtf2txt='unrtf --text'
alias libreconv=unoconv    # convert between libreoffice supported formats
alias libreconv-pdf='unoconv -f pdf'    # convert from libreoffice supported format to pdf

# ----------------
# JAPANESE ALIASES
# ----------------
alias fromjis='iconv -f SHIFT-JIS -t UTF-8'
alias tojis='iconv -f UTF-8 -t SHIFT-JIS'
alias translit='iconv -f utf-8 -t ascii//translit'  # transliterate western characters
alias romaji='kakasi -i utf8 -Ha -Ka -Ja -Ea -ka'
# requires python romkan library (pip install romkan)
alias rom2kana='python -c "'"import sys, romkan; print(romkan.to_hiragana(' '.join(sys.argv[1:])))"'"'
alias wakan='(cd ~/.wine/drive_c/Program\ Files\ \(x86\)/Wakan; wine wakan.exe)'
alias jlookup='(cd /opt/jlookup; ./jlookup)'
alias jlookupgui='(cd /opt/jlookup; ./jlookup-gui)'

# ------------------
# PIPELINE OPERATORS
# ------------------
function nargs { echo $#; };
alias cuts='cuts -0'
alias iselect='iselect -kj:KEY_DOWN -kk:KEY_UP'
alias choose='iselect -ma'
alias vimselect='iselect -ma | xargs vim'
alias unique='awk '"'"'!x[$0]++'"'"''
# alias maplines='xargs -d "\n" -n 1'
alias maplines='xargs -L1'
# eg.     ls|dolines printf "`pwd`/$x\n"; done
alias dolines='while read -r x || [[ -n $x ]]; do'
alias dolinesr='tacn | dolines'
# uniqdirs: print a list of target directories (ie. resolve symlinks) of files
alias uniqdirs='while read -r line || [[ -n $line ]]; do dirname "`readlink -f "$line"`"; done | sort | uniq'
# eg.              ls -l | dofields echo $x7; done
# equivalent to:   ls -l | awk '{ print $7 }'
# eg.              ls -l | dofields echo "$x7: $x5"; done
# equivalent to:   ls -l | awk '{ printf "%s: %s\n", $7, $5 }'
alias dofields='while read -r x1 x2 x3 x4 x5 x6 x7 x8 x9; do'
# while read -r x; do echo "stmts using $x"; done
alias imaplines='xargs -d "\n" -n 1 -p'
isexec() { if [[ -f "$1" ]] && [[ -x "$1" ]]; then return 0; else return 1; fi; }
alias filterexec='dolines if [[ -f "$x" ]] && [[ -x $(realpath "$x") ]]; then echo "$x"; fi; done'
alias dedup='perl -ne '"'"'$H{$_}++ or print'"'"   # remove repeated lines (need not be adjacent)
alias suniq='sort -u'   # sort and remove repeated lines
alias noblanklines='grep -v "^[[:space:]]*$"'
alias expanddotranges='perl -pe '"'"'s/,/ /g; s/(-?\d+)\.\.(-?\d+)/($1>$2)?join(" ", reverse $2..$1):join(" ", $1..$2)/ge'"'"
perms() {
    python <<EOF
from itertools import permutations as p
args = "$*".split()
for line in (" ".join(tup) for tup in p(args)):
    print(line)
EOF
}
alias tolowercase="tr '[:upper:]' '[:lower:]'"
alias touppercase="tr '[:lower:]' '[:upper:]'"
alias tohilitcase="perl -MText::Autoformat -e'undef $/; print autoformat +<>, { case => \"highlight\" }'"
alias totitlecase="perl -MText::Autoformat -e'undef $/; print autoformat +<>, { case => \"title\" }'"
alias first='head -n1'
alias last='tail -n1'   # system command last is available as alias lastu
alias rest='tail -n+2'
alias nodupes="awk 'a"'[$0]++{exit(1)}'"' -"   # error if duplicate lines are found
alias strip="python -c 'import sys; print(sys.stdin.read().strip())'"
# =====XARGS ALIASES=====
alias xa='xargs '                  # trailing space in alias causes next word to be alias expanded as well
alias chooseargs='iselect -ma | xargs'
alias xarglns='xargs -d\\n'
# Filter files in current directory by PCRE and pass to another command
withfiles() { ls | grep -iP "$1" | xargs -d\\n "${@:2}"; }
withFiles() { ls | grep -P "$1" | xargs -d\\n "${@:2}"; }
alias xaa='xargs bash -ic'
alias xacat='xargs cat'
alias xaless='xargs less'
alias xavip='xargs vimpager'
alias xavi='xargs vipipe'
alias xakill='xargs kill'
alias firstcat='head -n1 | xargs cat'
alias lastcat='tail -n1 | xargs cat'
alias choosecat='iselect -ma | xargs cat'
alias firstless='head -n1 | xargs less'
alias lastless='tail -n1 | xargs less'
alias chooseless='iselect -ma | xargs less'
#
alias recol='pr -t --columns'  # recolumnate single-column data
# http://stackoverflow.com/questions/17998978/removing-colors-from-output - buggy
alias stripcolors='sed -r "s/\x1B\[([0-9];)?([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"'
alias tobasenames='xargs basename -a'               # convert paths to basenames
alias todirnames='xargs realpath | xargs dirname'   # convert paths to dirnames
alias pickt='pick -t'    # pick subtable (https://github.com/bernardorufino/pick)
alias noerr='cat 2>/dev/null'    # allow |noerr to hide error output
alias withnl='(while read -r x || [[ -n $x ]]; do echo "$x"; done)'
alias tacn='withnl | tac'    # tac with newline
alias if_term='if [[ -t 1 ]]; then'    # test if output is going to a terminal (not a pipe)
alias is_term='[[ -t 1 ]]'             # test if output is going to a terminal (not a pipe)
# url2domain: pipe into it, or: url2domain <<<$URL
alias url2domain="{sed -r 's|^[^:/]+:/*||' | sed -r 's|/.*||'}"

# -------------
# MATH ALIASES.
# -------------
gcd() { command python3 -c "import math; print(math.gcd(int($1),int($2)))" }
lcm() { command python3 -c "import math; print(($1*$2)//math.gcd(int($1),int($2)))" }

# ------------
# FZF ALIASES.
# ------------
alias fzfm='fzf --ansi --exact --border --multi --bind=ctrl-i:toggle+down'
alias fzfp='fzf --ansi --exact --border --preview "cat {}"'
alias fzfc='fzf --ansi --exact --border --preview "cat {} | pygmentize -f terminal256 -O style=native -g"'

# -----------
# FORMATTING.
# -----------
alias onespace="tr '\t' ' ' | tr -s ' '"  # collapse whitespace (tabs/spaces) into a single space (good with cut)
alias tolines='tr " \t" "\n\n"'
alias joinlines='tr "\n" " "'
alias quotelines='while read -r x || [[ -n $x ]]; do echo "'"'"'$x'"'"'"; done'
alias firstcol="cut -d' ' -f1"
alias splitpath='( IFS=: read -r -d '' -A path_array; for f in $path_array; do echo "$f"; done )'
alias deduppath="awk -F: '{for (i=1;i<=NF;i++) { if ( !x[\$i]++ ) printf(\"%s:\",\$i); }}'"
alias tabs2cols="column -t -s $'\t'"
alias cutsp="onespace | cut -d' '"
# eg.:    ls -Al | cuts -f2,9    # list filenames and number of hard links
alias cut:='cut -d:'
alias evenlines="awk 'NR%2==0'"  # print even lines (starting at line 0)
alias oddlines="awk 'NR%2==1'"
alias concat='tr -d "\n"'        # join lines into string
alias tabify-table="perl -ple 's/\s+/\t/g'"    # whitespace-delim table -> tab-delim
alias number-lines='perl -wnle '\''print "$.\t$_"'\'    # add numbers to left of lines
alias align='column -t'   # align columns

# ------------
# rs variants:
# ------------
# row2col: eg.    echo 1 2 3 | row2col
# equivalent to row2col='xargs printf "%d\n"'
alias row2col='rs 0 1'
alias r2c='rs 0 1'
alias col2row='rs 1 0'
alias c2r='rs 1 0'
# transpose: eg.    printf "1 2 3\n4 5 6\n" | transpose
alias transpose='rs -T'

# -------
# RANDOM.
# -------
alias ranalnum='tr -dc "[:lower:]0-9" < /dev/urandom | head -c'
alias ranAlnum='tr -dc "[:alpha:]0-9" < /dev/urandom | head -c'
alias ranalpha='tr -dc "[:lower:]" < /dev/urandom | head -c'
alias ranAlpha='tr -dc "[:alpha:]" < /dev/urandom | head -c'
alias rannum='tr -dc "0-9" < /dev/urandom | head -c'

# ------
# SEARCH
# ------
alias ucs=/opt/scripts/unicodesearch    # github.com/jpverkamp/dotfiles/blob/master/bin/uni
alias u='unicode --max=0'        # search for unicode characters
alias ucr='unicode --max=0 -r'   # regex search for unicode characters
alias ucx='unicode --max=0 -x'   # hexadecimal search for unicode characters
alias ucd='unicode --max=0 -d'   # decimal search for unicode characters
alias ucc='unicode --max=0 -s'   # describe unicode characters in string
alias nconv='numconv -f all -t Western_Lower'  # convert number to decimal
alias thesaurus=aiksaurus
alias weather='ansiweather -l Lismore,AU -u metric -s true -f 5 -d true | sed "s/=>/=>\n/" | tr "-" "\n"'
alias weathernow='inxi -xxxW goonellabah,nsw,australia'

#---------------------
# APPLICATION ALIASES.
#---------------------
alias vi=nvi
alias coline='command col'    # leave col free as a column selection command
alias unmount=umount
alias trash-restore=restore-trash
alias ack=ack-grep
alias noi=noice
alias lastu=last    # leave last free for alias
alias PeaExtractor=/opt/peazip/res/pealauncher
alias PeaUtils=/opt/peazip/res/pea
alias googlecodewiki2mediawiki=gw2mw.sh  # convert google code wiki --> mediawiki
alias ct=chromix-too

#---------------------------------
# APPLICATION DEFAULTS & VARIANTS.
#---------------------------------
alias roxterm-display='roxterm --hide-menubar -T "Roxterm Display" -z 1.3 --geometry=70x40'
alias nautilus='nautilus --no-desktop'
alias mc='mc -S gotar'
alias bc='bc -l'
alias echoe='echo -e'
alias esed='sed -r'
alias sulocate='sudo locate'
alias untgz='tar -zxvf'
alias dfh='df -h'
#alias info='pinfo'
alias edx-dl='edx-dl -s'
alias info='info --vi-keys'
alias octave='octave --quiet'
alias qiv='qiv -e'
# alias handyoutliner='opt/handyoutliner/start-linux'
alias handyoutliner='mono /opt/handyoutliner/HandyOutliner.exe'
alias clock='cairo-clock -deops -x 1695 -y 104 -w 200 -h 200 -r 1 -t radium'
alias clock-desktop='xclock -chime -update 1 -geometry 1094x929+400+50'
alias gremclock='cairo-clock -deops -x 1695 -y 104 -w 200 -h 200 -r 1 -t gremlin'
alias pman='pinfo -m'
# repeat character, eg.    rep '*' 20
alias rep="jot -s '' -b"
alias say='spd-say -r -40 -t male2'
alias gemu='gem update --system'
alias pandoc-md='pandoc -f markdown -t html5 --toc'  # pandoc-md infile.md > outfile.html
alias mdless='/usr/local/bin/mdless'
alias feh-im='feh --magick-timeout 0'  # give image-magick enough time to convert files
alias zmessage='zenity --info --text'  # pop-up message box (like xmessage)
alias ibus-start='ibus-daemon -drx'
alias sort-natural='sort -bdV'
alias sort-icase-natural='sort -bdfV'
alias sort-case-sens='LC_COLLATE=C sort'
alias diskusage='gdmap -f'
# alias dolphin='XDG_CURRENT_DESKTOP=kde dolphin'   # may fix ui if launched from other desktop environment
alias ibusd='IBUS_ENABLE_SYNC_MODE=1 ibus-daemon -drx'
alias thumbsdb='vinetto -o ./.thumbnails ./?humbs.db'
alias kanjitomo='java -Xmx1000m -jar /opt/jar/KanjiTomo/KanjiTomo.jar -run'
alias subtitledl='subliminal download -l en'    # dl subs matching a video file - requires pip install subliminal
alias surft='surf -t'
alias shoot='shutter -s -e'    # screenshot rectangular selection and exit
alias shootwin='shutter -w -e'    # screenshot window and exit
alias shootmenu='shutter -m -e'    # screenshot menu and exit
alias shootagain='shutter -r -e'   # repeat last screenshot - not working?
alias sc-tutorial='sc /usr/share/doc/sc/tutorial.sc'
alias rofii='rofi -combi-modi window,drun,run -show combi -modi combi'   # general purpose launcher
alias install-avidump2='sudo apt-get install libmono-system4.0-cil libmono-corlib4.5-cil libmono-system-xml-linq4.0-cil'
alias hotshell='/usr/bin/hs'   # clash with NPM module executable

# -------
# NOVELTY
# -------
alias starwars='telnet towel.blinkenlights.nl'
# http://www.reddit.com/r/commandline/comments/2ofb4e/star_trek_holodeck_noise_for_12_hours_with/
alias startrek='play -n -c2 synth whitenoise lowpass -1 69 lowpass -1 50 lowpass -1 120 gain +15'


# *********************
# *                   *
# * COMMAND REMINDERS *
# *                   *
# *********************
# These entries are to facilitate grepping the alias file for a forgotten command

# lsof, fuser : list processes accessing a file or socket, open files for process, etc
# gcp: cp with additional functionality, incl. progress, munging to handle FAT restrictions,...
